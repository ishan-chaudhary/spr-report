{"version":3,"sources":["components/reporter/table/data.tsx","components/reporter/table/chart.tsx","components/reporter/table/index.tsx","axios.ts","components/reporter/filters/index.tsx","components/reporter/index.tsx","components/app/App.tsx","index.tsx"],"names":["truncateString","string","limit","length","substring","columns","title","dataIndex","key","render","text","sorter","compare","a","b","duration","multiple","metadata","console","log","size","name","placement","style","cursor","color","synoposisColumns","href","org","format","longtask","resources","map","resource","Option","Select","Chart","input","fileDates","setFileName","file","useState","setColor","data","setData","labels","setLabels","selectData","setSelectData","selected","setSelected","selectedDate","setSelectedDate","setLongtask","useEffect","s","Set","forEach","entry","add","split","trim","Array","from","filteredInput","filter","includes","chartData","datasets","label","borderColor","pointBackgroundColor","pointBorderColor","pointRadius","borderWidth","tension","placeholder","value","width","onChange","entity","date","padding","textAlign","options","scales","yAxes","ticks","beginAtZero","type","TabPane","Tabs","whiteListResources","TableComponent","durations","setRuns","currNumRun","output","setOutput","synopsis","setSynopsis","temp","datapoint","index","Object","keys","arr","out","i","some","rx","test","push","Math","random","startTime","entryType","ceil","priority","replace","transferSize","interaction","ans","time","max","sort","final","slice","reduce","prev","curr","actionName","className","tab","dataSource","pagination","id","instance","axios","create","baseURL","tailLayout","wrapperCol","offset","span","Filter","updateTableData","setModule","filename","Form","useForm","form","formLayout","run","setRun","setEntry","handleSubmit","post","JSON","stringify","then","catch","err","formItemLayout","labelCol","layout","initialValues","Item","defaultValue","mode","htmlType","onClick","Header","Layout","Content","Sider","Menu","SubMenu","LayoutComponent","module","numRun","setNumRun","fileNames","setFileNames","get","files","hasOwnProperty","formatFileNames","theme","height","minHeight","num","App","exact","path","component","Reporter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d254846.chunk.js","sourcesContent":["import React from 'react';\nimport { Tag , Tooltip} from 'antd';\n\nfunction truncateString(string: string, limit: number) {\n    if (string.length > limit) {\n        return string.substring(0, limit) + \"...\"\n    } else {\n        return string\n    }\n}\n\nexport const columns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a>{text}</a>,\n    },\n    {\n        title: 'Duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Entry Type',\n        dataIndex: 'entryType',\n        key: 'entryType',\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Metadata',\n        dataIndex: 'metadata',\n        key: 'metadata',\n        render: (metadata: any) => {\n            console.log(metadata.size)\n            return (<div><p>{metadata && metadata.name ? <Tooltip placement=\"bottom\" title={metadata.name}><span style={{cursor:'pointer'}}>{truncateString(metadata.name, 60)}</span></Tooltip> : 'None'}</p></div>)\n        }\n    },\n    {\n        title: 'Priority',\n        key: 'priority',\n        dataIndex: 'priority',\n        render: (duration: any) => (\n            <>\n                {\n                    duration > 150 ? <Tag color={'red'} key={'high'}>\n                        High\n                    </Tag> : duration > 100 ? <Tag color={'yellow'} key={'high'}>\n                        Medium\n                    </Tag> : <Tag color={'green'} key={'high'}>\n                        Low\n                    </Tag>}\n            </>\n        ),\n    }\n];\n\nexport const synoposisColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Action Name',\n        key: 'actionName',\n        dataIndex: 'actionName',\n    }\n]","import React, { FC, useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Select } from 'antd';\nimport { Switch } from 'antd';\n\nconst { Option } = Select;\n\nconst randomBetween = (min: number, max: number) => min + Math.floor(Math.random() * (max - min + 1));\n\nconst Chart: FC<{ input: Array<any>, fileDates: Array<any>, setFileName(name: string): void, file: string }> = ({ input, fileDates, setFileName, file }) => {\n    const [color, setColor] = useState<Array<string>>([]);\n    const [data, setData] = useState<Array<string>>([]);\n    const [labels, setLabels] = useState<Array<string>>([]);\n    const [selectData, setSelectData] = useState<Array<string>>([]);\n    const [selected, setSelected] = useState<string>('');\n    const [selectedDate , setSelectedDate] = useState<string>('');\n    const [longtask,setLongtask] = useState<boolean>(false);\n\n    function handleRunChange(value: string) {\n        setSelected(value);\n    }\n\n    function handleDateChange(value: string) {\n        setFileName(`${file}(${value}).json`)\n    }\n\n\n    useEffect(() => {\n        if (input) {\n            let arr: Array<string> = \n            ['#9E81EB',\n            '#40A3F5',\n            '#4CD2E0',\n            '#CBD756',\n            '#87BD66',\n            '#CFE8FC',\n            '#426AEA',\n            '#C8B9EE',\n            '#9FD1FA',\n            '#79DFEA',\n            '#DFE5A4',\n            '#B9D6A7',\n            '#C099C6',\n            '#91A9F7',\n            '#E3DCF6',\n            '#CFE8FC',\n            '#BCEFF4',\n            '#EFF2D1',\n            '#DCEAD3',\n            '#E1CDE4',\n            '#C8D4FB'];\n            // for (let i = 0; i < input.length; i++) {\n            //     const r = randomBetween(0, 255);\n            //     const g = randomBetween(0, 255);\n            //     const b = randomBetween(0, 255);\n            //     const rgb = `rgb(${r},${g},${b},1)`\n            //     arr.push(rgb);\n            // }\n            setColor(arr);\n\n            let s = new Set<string>();\n\n            input.forEach(entry => {\n                s.add(entry.name.format.split('-')[0].trim());\n            })\n\n            setSelectData(Array.from(s));\n            setSelected(Array.from(s)[0]);\n            setSelectedDate(fileDates[0]);\n        }\n    }, [input])\n\n    useEffect(() => {\n        let filteredInput = input.filter(entry => {\n            return entry.name.format.includes(selected);\n        })\n\n        let data = filteredInput.map(entry => {\n            return longtask ? entry.longtask : entry.duration;\n        })\n\n        let labels: Array<string> = filteredInput.map(entry => {\n            return entry.name.format.split('-')[1].trim()\n        })\n\n        setData(data);\n        setLabels(labels);\n    }, [selected, input , longtask]);\n\n    const chartData = {\n        labels,\n        datasets: [\n            {\n                label: !longtask ? 'Time to Interactive in ms' : 'Maximum long task duration in ms',\n                data: data,\n                borderColor: color,\n                pointBackgroundColor:color,\n                pointBorderColor:color,\n                pointRadius:5,\n                borderWidth: 1,\n                tension:0\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    };\n\n    return (\n        <div>\n            <Select placeholder=\"Select Filter\" value={selected} style={{ width: '300px' }} onChange={handleRunChange}>\n                {\n                    selectData.map((entity) => {\n                        return <Option value={entity}>{entity}</Option>\n                    })\n                }\n            </Select>\n            <Select placeholder=\"Select Filter\" value={selectedDate} style={{ width: '300px' }} onChange={handleDateChange}>\n                {\n                    fileDates.map(date => {\n                        return <Option key={`${file}-${date}`} value={`${date}`} >{date}</Option>\n                    })\n                }\n            </Select>\n            <span style={{padding:'10px'}}><Switch onChange={()=>{setLongtask(!longtask)}}/> Longtask</span>\n            <h3 style={{padding:'10px',textAlign:'center'}}>{selected}</h3>\n            <Line data={chartData} options={options} type=\"Line\" />\n        </div>\n    );\n}\n\n\nexport default Chart","import React, { FC, Fragment, useEffect, useState } from 'react'\nimport { columns, synoposisColumns } from './data'\nimport { Table } from 'antd';\nimport { durationsType } from '../index';\nimport { Tabs } from 'antd';\nimport Chart from './chart';\n\nconst { TabPane } = Tabs;\n\nconst whiteListResources = [/app.getsentry.com/, /dap.sprinklr.com/, /user\\/session\\/details/, /.js/];\n\nconst TableComponent: FC<{ data: { data: Array<any>, durations: durationsType }, setRuns(num: string): void, currNumRun: string | null, setFileName(name: string): void, fileDates: Array<string>, file: string }> = ({ data: { data, durations }, setRuns, currNumRun, fileDates, file, setFileName }) => {\n    const [output, setOutput] = useState<Array<any>>([]);\n    const [synopsis, setSynopsis] = useState<Array<any>>([]);\n\n    useEffect(() => {\n        let temp: Array<any> = []\n        if (data && data.length > 0) {\n            temp = data.map((datapoint, index) => {\n                let key = Object.keys(datapoint)[0];\n                let arr = datapoint[key];\n                let out = [];\n                if (arr && arr.length > 0) {\n                    for (let i of arr) {\n                        let isExcluded = whiteListResources.some((rx) =>\n                            rx.test(i.name)\n                        );\n                        if (!isExcluded) {\n                            out.push({\n                                key: `${index}-${i.startTime}`,\n                                name: key,\n                                entryType: i.entryType,\n                                duration: Math.ceil(i.duration),\n                                priority: Math.ceil(i.duration),\n                                metadata: {\n                                    name: i.entryType === 'resource' ? i.name.replace('https://champagne.sprinklr.com','') : 'None',\n                                    size: i.entryType === 'resource' ? i.transferSize : 0\n                                },\n                                interaction: 'Click'\n                            })\n                        } else if (out.length === 0) {\n                            out.push({\n                                key: `${index}-${Math.random()}`,\n                                name: key,\n                            })\n                        }\n                    }\n                } else {\n                    out.push({\n                        key: `${index}-${Math.random()}`,\n                        name: key,\n                    })\n                }\n                return out;\n            })\n        }\n        setOutput(temp);\n    }, [data])\n\n    useEffect(() => {\n        if (!durations || Object.keys(durations).length === 0) return;\n        let ans: Array<any> = [];\n        const sorter = (a: any, b: any) => {\n            return a.time < b.time ? -1 : 1;\n        };\n        for (let key in durations) {\n            let data = output.filter((arr) => {\n                return arr[0].name === key\n            })[0];\n            let longtask = 0;\n            let resource: Array<any> = [];\n            if (data) {\n                data.forEach((data: any) => {\n                    if (data.entryType === 'longtask') {\n                        longtask = Math.max(longtask, data.duration)\n                    }\n                    if (data.entryType === 'resource') {\n                        resource.push({ name: data.metadata.name, time: data.metadata.time });\n                    }\n                })\n                resource.sort(sorter)\n                let slicedResources = resource.slice(0, 5);\n                let final = slicedResources.reduce((prev, curr) => { prev.push(curr.name); return prev }, new Array<string>());\n                resource = final;\n            }\n            ans.push({\n                name: { org: key, format: `${key}` },\n                longtask: longtask,\n                resource: resource,\n                duration: durations[key]['time'],\n                interaction: durations[key]['interaction'],\n                actionName: durations[key]['actionName']\n            })\n            if (!currNumRun) setRuns(durations[key]['numRun']);\n        }\n        setSynopsis(ans);\n    }, [output, durations]);\n\n\n    return (\n        <div className=\"card-container\">\n            <Chart input={synopsis} fileDates={fileDates} setFileName={setFileName} file={file} />\n            <Tabs type=\"card\">\n                <TabPane tab=\"Summary\" key=\"1\">\n                    <div>\n                        <Table columns={synoposisColumns} dataSource={synopsis} pagination={false} />\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Detail Report\" key=\"2\">\n                    {\n                        output && output.length > 0 ? output.map((data: Array<{ name: string }>) => {\n                            return (\n                                <Fragment key={`${data[0].name}`}>\n                                    <h3 id={`${data[0].name}`}>Duration: {durations && Object.keys(durations).length > 0 && durations[data[0].name]['time']}<small>ms</small></h3>\n                                    <Table columns={columns} dataSource={data} />\n                                </Fragment>)\n                        }) : null\n                    }\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n}\n\n\nexport default TableComponent","import axios from 'axios'\n\nvar instance = axios.create({\n    baseURL : \" http://13.232.71.146:8118\"\n})\n\nexport default instance","import React, { Fragment, useState, useEffect, FC } from 'react'\nimport { Select } from 'antd';\nimport { Form, Button } from 'antd';\nimport axios from '../../../axios';\nimport {durationsType} from '../index'\ntype LayoutType = Parameters<typeof Form>[0]['layout'];\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Filter: FC<{ updateTableData(data: { data: Array<any>, durations: durationsType }): void, setModule(name: string): void , filename:string}> = ({ updateTableData, setModule , filename}) => {\n    const [form] = Form.useForm();\n    const [formLayout] = useState<LayoutType>('inline');\n    const [run, setRun] = useState<string>('1');\n    const [entryType, setEntry] = useState<Array<string>>(['longtask', 'resource']);\n\n    function handleSubmit() {\n        updateTableData({ data: [], durations: {} });\n        if (filename.length > 0) {\n            axios.post('http://localhost:8118/data', {\n                run: run,\n                entryType: JSON.stringify(entryType),\n                filename: filename\n            }).then(({ data }) => {\n                updateTableData(data);\n                setModule(filename);\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    useEffect(()=>{\n        console.log(filename);\n        handleSubmit();\n    },[filename])\n\n    function handleRunChange(value: string) {\n        setRun(value);\n    }\n\n    function handleEntryChange(value: Array<string>) {\n        setEntry(value)\n    }\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: { span: 4 },\n                wrapperCol: { span: 14 },\n            }\n            : null;\n\n    return (\n        <Fragment>\n            <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                initialValues={{ layout: formLayout }}\n            >\n                <Form.Item label=\"Run\" name=\"run\">\n                    <Select defaultValue=\"1\" style={{ width: 120 }} onChange={handleRunChange}>\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Entry Type\" name=\"entryType\">\n                    <Select defaultValue={['longtask', 'resource']} style={{ width: '300px' }} onChange={handleEntryChange} mode=\"multiple\" size='large'>\n                        <Option value=\"longtask\">Long Tasks</Option>\n                        <Option value=\"resource\">Resources</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Fragment>\n    )\n}\n\n\nexport default Filter","import React, { useState, useEffect, FC } from 'react'\nimport { Layout, Menu } from 'antd';\nimport { FileDoneOutlined } from '@ant-design/icons';\nimport Table from './table/index'\nimport Filter from './filters';\nimport axios from '../../axios';\n\nconst { Header, Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport type durationsType = { [key: string]: { time: string, actionName: string, interaction: string, numRun: string } }\n\nfunction formatFileNames(files: Array<string>) {\n    let output: { [key: string]: any } = {};\n    files.forEach(file => {\n        let arr = file.split('(');\n        if (output.hasOwnProperty(arr[0])) {\n            let date = arr[1].split(')')[0];\n            output[arr[0]].push(date);\n        } else {\n            let date = arr[1].split(')')[0];\n            output[arr[0]] = [date];\n        }\n    })\n    return output;\n}\n\nconst LayoutComponent: FC = () => {\n    const [data, setData] = useState<{ data: Array<any>, durations: durationsType }>({ data: [], durations: {} });\n    const [module, setModule] = useState<string | null>(null);\n    const [numRun, setNumRun] = useState<string | null>(null);\n    const [filename, setFileName] = useState<string>('');\n    const [fileNames, setFileNames] = useState<{ [key: string]: Array<string> }>({});\n\n    useEffect(() => {\n        axios.get('http://localhost:8118/fileNames').then(({ data }) => {\n            if (data) {\n                setFileNames(formatFileNames(data));\n                setFileName(data[0]);\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n\n    return (\n        <Layout>\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\">\n                    <Menu.Item key=\"1\">Measurement of Interactive Slowness</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            style={{ height: '100%' }}\n                        >\n                            {\n                                Object.keys(fileNames).map((file: string) => {\n                                    return (\n                                        <Menu.Item key={`${file}`} onClick={() => {\n                                            setModule(`${file}(${fileNames[file][0]})`);\n                                            setFileName(`${file}(${fileNames[file][0]}).json`);\n                                        }}>{file}</Menu.Item>\n                                    )\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px' }}>\n                                <Filter updateTableData={(data: { data: Array<any>, durations: durationsType }) => { setData(data) }} setModule={(name: string) => setModule(name)} filename={filename} />\n                                <h3>Module Name : {module && module.split('(')[0]}</h3>\n                                <h3>#Run :{numRun} </h3>\n                                <h3>Date: {module && module.split('(')[1].split(')')[0]}</h3>\n                            </Content>\n                        </Layout>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            {\n                                module &&\n                                <Content style={{ padding: '0 24px', minHeight: 280 }}><Table data={data} setRuns={(num: string) => { setNumRun(num) }} currNumRun={numRun} setFileName={(name: string) => { setFileName(name) }} fileDates={fileNames[module.split('(')[0]]} file={module.split('(')[0]} /></Content>\n                            }\n                        </Layout></Content>\n                </Layout>\n            </Content>\n        </Layout>)\n}\n\n\nexport default LayoutComponent","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Reporter from '../reporter/index'\nimport \"../../app.css\"\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Route exact path=\"/\" component={Reporter} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}