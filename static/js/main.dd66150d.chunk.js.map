{"version":3,"sources":["components/reporter/table/data.tsx","axios.ts","components/reporter/table/chartInclude.ts","components/reporter/table/chart.tsx","components/reporter/table/index.tsx","components/reporter/filters/index.tsx","components/reporter/description.ts","components/reporter/index.tsx","components/app/App.tsx","index.tsx"],"names":["truncateString","string","limit","length","substring","columns","title","dataIndex","key","render","text","sorter","compare","a","b","duration","multiple","metadata","name","placement","style","cursor","synoposisColumns","href","org","format","longtask","resources","map","resource","launchpadColumns","instance","axios","create","baseURL","data","color","Option","Select","Chart","input","fileDates","setCloudName","file","useState","colorlist","labels","setLabels","selectData","setSelectData","dataset","setDataset","selected","setSelected","setSelectedDate","useEffect","s","Set","forEach","entry","add","split","trim","Array","from","get","then","dates","Object","keys","i","date","modules","filter","includes","module","label","time","index","findIndex","el","IncludeList","bgColor","Math","floor","random","obj","borderColor","backgroundColor","push","formatDate","moment","generateDataset","catch","chartData","datasets","options","scales","x","display","y","plugins","marginBottom","placeholder","value","width","onChange","entity","boxSizing","padding","type","TabPane","Tabs","whiteListResources","TableComponent","durations","setRuns","currNumRun","setFileName","output","setOutput","synopsis","setSynopsis","temp","datapoint","arr","out","some","rx","test","startTime","entryType","ceil","priority","replace","size","transferSize","interaction","ans","max","sort","final","slice","reduce","prev","curr","actionName","className","tab","dataSource","undefined","includeList","synopsisFilter","pagination","id","Filter","updateTableData","setModule","filename","Form","useForm","run","post","JSON","stringify","err","console","log","desc","Header","Layout","Content","Sider","LayoutComponent","setData","numRun","setNumRun","fileNames","setFileNames","files","hasOwnProperty","formatFileNames","position","zIndex","top","theme","mode","Item","height","onClick","textTransform","replaceAll","minHeight","num","App","exact","path","component","Reporter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd66150d.chunk.js","sourcesContent":["import React from 'react';\nimport { Tag , Tooltip} from 'antd';\n\nfunction truncateString(string: string, limit: number) {\n    if (string.length > limit) {\n        return string.substring(0, limit) + \"...\"\n    } else {\n        return string\n    }\n}\n\n\nexport const columns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a>{text}</a>,\n    },\n    {\n        title: 'Duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Entry Type',\n        dataIndex: 'entryType',\n        key: 'entryType',\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'metadata',\n        key: 'metadata',\n        render: (metadata: any) => {\n            return (<div><p>{metadata && metadata.name ? <Tooltip placement=\"bottom\" title={metadata.name}><span style={{cursor:'pointer'}}>{truncateString(metadata.name, 60)}</span></Tooltip> : 'None'}</p></div>)\n        }\n    }\n];\n\nexport const synoposisColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    }\n]\n\nexport const launchpadColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    }\n]","import axios from 'axios'\n\nvar instance = axios.create({\n    baseURL : \"http://13.232.71.146:8118\"\n})\n\nexport default instance","export const data: { [key: string]: any } = {\n  \"Modern Marketing\": [\n    \"Workflow Engine\",\n    \"Production Dashboards\",\n    \"Campaigns\",\n    \"Request Forms\",\n    \"Digital Asset Management\",\n  ],\n  \"Modern Research\": [\n    \"Listening Smart Alerts Dashboard\",\n    \"Listening Dashboards\",\n    \"Media Insights\",\n    \"Smart Theme Explorer\",\n    \"Visual Insights\",\n  ],\n  \"Modern Care\": [\n    \"Care Reporting\",\n    \"Smart Responses\",\n    \"Agent Console\",\n    \"Assignment Engine\",\n    \"Proactive Prompts\",\n  ],\n  \"Modern Engagement\": [\n    \"Reporting\",\n    \"Editorial Calendar\",\n    \"Engagement Dashboards\",\n    \"Manage Pipelines\",\n  ],\n};\n\nexport const color: Array<string> = [\n  \"#0074D9\",\n  \"#FF4136\",\n  \"#2ECC40\",\n  \"#FF851B\",\n  \"#7FDBFF\",\n  \"#B10DC9\",\n  \"#FFDC00\",\n  \"#001f3f\",\n  \"#39CCCC\",\n  \"#01FF70\",\n  \"#85144b\",\n  \"#F012BE\",\n  \"#3D9970\",\n  \"#111111\",\n  \"#AAAAAA\",\n];\n","import React, { FC, useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Select } from 'antd';\nimport axios from '../../../axios';\nimport {data as IncludeList , color as colorlist} from './chartInclude';\nimport moment from 'moment'\n\nconst { Option } = Select;\n\nconst randomBetween = (min: number, max: number) => min + Math.floor(Math.random() * (max - min + 1));\n\nconst Chart: FC<{ input: Array<any>, fileDates: Array<any>, setCloudName(name: string): void, file: string }> = ({ input, fileDates, setCloudName, file }) => {\n    const [color] = useState<Array<string>>(colorlist);\n    const [labels, setLabels] = useState<Array<string>>([]);\n    const [selectData, setSelectData] = useState<Array<string>>([]);\n    const [dataset,setDataset] = useState<Array<string>>([]);\n    // const [longtaskDatasetState,setLongtaskDataset] = useState<Array<string>>([]);\n    const [selected, setSelected] = useState<string>('');\n    const [selectedDate , setSelectedDate] = useState<string>('');\n\n    function handleRunChange(value: string) {\n        setSelected(value);\n        setCloudName(value);\n    }\n\n    useEffect(() => {\n        if (input) {\n\n            let s = new Set<string>();\n\n            input.forEach(entry => {\n                s.add(entry.name.org.split('-')[0].trim());\n            })\n            setCloudName(Array.from(s)[0])\n            setSelectData(Array.from(s));\n            setSelected(Array.from(s)[0]);\n            setSelectedDate(fileDates[0]);\n        }\n    }, [input])\n\n    function generateDataset(data: any) {\n        let dates = Object.keys(data);\n        let dataset: Array<any> = [];\n        let labels: Array<any> = [];\n        // let longtaskDataset: Array<any> =[];\n        for (let i in dates) {\n            let date: { [key: string]: any } = data[dates[i]];\n            let modules = Object.keys(date);\n            modules = modules.filter((name) => { return name.includes(selected) });\n            modules.forEach((module: string) => {\n                let label = module.split('-')[1].trim();\n                let time = date[module].time;\n                // let longtask = date[module].longtask;\n                let index = dataset.findIndex((el) => { return el.label === label });\n                if (Object.keys(IncludeList).includes(selected) && !IncludeList[selected].includes(label)) return;\n                if (index === -1) {\n                    let bgColor = color[Math.floor(Math.random() * color.length)];\n                    let obj = {\n                        label, data: [time], borderColor: bgColor,\n                        backgroundColor: bgColor,\n                    };\n                    // let longtaskObj = {\n                    //     label, data: [longtask], borderColor: bgColor,\n                    //     backgroundColor:bgColor,\n                    //     pointBackgroundColor: bgColor,\n                    //     pointBorderColor: bgColor,\n                    //     pointRadius: 5,\n                    //     borderWidth: 2,\n                    //     tension: 0\n                    // }\n                    dataset.push(obj)\n                    // longtaskDataset.push(longtaskObj);\n                } else {\n                    dataset[index]['data'].push(time);\n                    // longtaskDataset[index]['data'].push(longtask);\n                }\n            })\n            let formatDate = dates[i].split('-')\n            labels.push(moment(`${formatDate[1]}/${formatDate[0]}/${formatDate[2]}`).format('Do MMMM'));\n        }\n        if (dataset.length > 0) {\n            setDataset(dataset);\n            setLabels(labels);\n        }\n        // setLongtaskDataset(longtaskDataset);\n    }\n\n    useEffect(() => {\n        axios.get(`/chart/${file}`).then(({ data }) => {\n            if (data) {\n                generateDataset(data);\n            }\n        }).catch();\n    }, [file, selected]);\n\n    const chartData = {\n        labels,\n        datasets: dataset\n    };\n\n    // const longtaskChartData = {\n    //     labels,\n    //     datasets:longtaskDatasetState\n    // }\n\n    const options = {\n        scales: {\n            x: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Date'\n                }\n              },\n              y: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Time to Interactive (ms)'\n                }\n              }\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: selected\n            }\n        }\n    };\n\n    return (\n        <div style={{marginBottom:'10px'}}>\n           { selectData && selectData.length > 1 && <Select placeholder=\"Select Filter\" value={selected} style={{ width: '300px' , marginBottom:'10px' }} onChange={handleRunChange}>\n                {\n                    selectData.map((entity) => {\n                        return <Option value={entity}>{entity}</Option>\n                    })\n                }\n            </Select>}\n            {/* <Select placeholder=\"Select Filter\" value={selectedDate} style={{ width: '300px' }} onChange={handleDateChange}>\n                {\n                    fileDates.map(date => {\n                        return <Option key={`${file}-${date}`} value={`${date}`} >{date}</Option>\n                    })\n                }\n            </Select> */}\n            {/* <h5>Time to intercative </h5> */}\n            <div style={{backgroundColor:'white', boxSizing:'border-box', padding:'10px'}}>\n            <Line data={chartData} options={options} type=\"Line\" />\n            </div>\n            {/* <h5>long Task</h5>\n           <Line data={longtaskChartData} options={options} type=\"Line\" /> */}\n        </div>\n    );\n}\n\n\nexport default Chart","import React, { FC, Fragment, useEffect, useState } from 'react'\nimport { columns, synoposisColumns , launchpadColumns } from './data'\nimport { Table } from 'antd';\nimport { durationsType } from '../index';\nimport { Tabs } from 'antd';\nimport Chart from './chart';\nimport {data as includeList} from './chartInclude';\n\nconst { TabPane } = Tabs;\n\nconst whiteListResources = [/app.getsentry.com/, /dap.sprinklr.com/, /user\\/session\\/details/, /.js/];\n\nconst TableComponent: FC<{ data: { data: Array<any>, durations: durationsType }, setRuns(num: string): void, currNumRun: string | null, setFileName(name: string): void, fileDates: Array<string>, file: string }> = ({ data: { data, durations }, setRuns, currNumRun, fileDates, file, setFileName }) => {\n    const [output, setOutput] = useState<Array<any>>([]);\n    const [synopsis, setSynopsis] = useState<Array<any>>([]);\n    const [selected , setSelected] = useState<string>('');\n\n    useEffect(() => {\n        let temp: Array<any> = []\n        if (data && data.length > 0) {\n            temp = data.map((datapoint, index) => {\n                let key = Object.keys(datapoint)[0];\n                let arr = datapoint[key];\n                let out = [];\n                if (arr && arr.length > 0) {\n                    for (let i of arr) {\n                        let isExcluded = whiteListResources.some((rx) =>\n                            rx.test(i.name)\n                        );\n                        if (!isExcluded) {\n                            out.push({\n                                key: `${index}-${i.startTime}`,\n                                name: key,\n                                entryType: i.entryType,\n                                duration: Math.ceil(i.duration),\n                                priority: Math.ceil(i.duration),\n                                metadata: {\n                                    name: i.entryType === 'resource' ? i.name.replace('https://champagne.sprinklr.com','') : 'None',\n                                    size: i.entryType === 'resource' ? i.transferSize : 0\n                                },\n                                interaction: 'Click'\n                            })\n                        } else if (out.length === 0) {\n                            out.push({\n                                key: `${index}-${Math.random()}`,\n                                name: key,\n                            })\n                        }\n                    }\n                } else {\n                    out.push({\n                        key: `${index}-${Math.random()}`,\n                        name: key,\n                    })\n                }\n                return out;\n            })\n        }\n        setOutput(temp);\n    }, [data])\n\n    useEffect(() => {\n        if (!durations || Object.keys(durations).length === 0) return;\n        let ans: Array<any> = [];\n        const sorter = (a: any, b: any) => {\n            return a.time < b.time ? -1 : 1;\n        };\n        for (let key in durations) {\n            let data = output.filter((arr) => {\n                return arr[0].name === key \n            })[0];\n            let longtask = 0;\n            let resource: Array<any> = [];\n            if (data) {\n                data.forEach((data: any) => {\n                    if (data.entryType === 'longtask') {\n                        longtask = Math.max(longtask, data.duration)\n                    }\n                    if (data.entryType === 'resource') {\n                        resource.push({ name: data.metadata.name, time: data.metadata.time });\n                    }\n                })\n                resource.sort(sorter)\n                let slicedResources = resource.slice(0, 5);\n                let final = slicedResources.reduce((prev, curr) => { prev.push(curr.name); return prev }, new Array<string>());\n                resource = final;\n            }\n            ans.push({\n                name: { org: key, format: `${key.split('-')[1].trim()}` },\n                longtask: longtask,\n                resource: resource,\n                duration: durations[key]['time'],\n                interaction: durations[key]['interaction'],\n                actionName: durations[key]['actionName']\n            })\n            if (!currNumRun) setRuns(durations[key]['numRun']);\n        }\n        setSynopsis(ans);\n    }, [output, durations]);\n\n    function synopsisFilter(data: Array<any>): Array<any> {\n        return  selected!== undefined ? data.filter(el => {\n           return Object.keys(includeList).includes(selected) &&  !includeList[selected].includes(el.name.format) ? false : el.name.org.split('-')[0].trim() === selected; \n        }) : [];\n    }\n\n\n    return (\n        <div className=\"card-container\">\n            <Chart input={synopsis} fileDates={fileDates} setCloudName={(name:string)=>{setSelected(name)}} file={file} />\n            <Tabs type=\"card\">\n                <TabPane tab=\"Summary\" key=\"1\">\n                    <div>\n                        <Table columns={ file.includes('Launchpad')? launchpadColumns :synoposisColumns} dataSource={synopsisFilter(synopsis)} pagination={false} />\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Detail Report\" key=\"2\">\n                    {\n                     output && output.length > 0 ? output.map((data: Array<{ name: string }>) => {\n                            return (\n                                <Fragment key={`${data[0].name}`}>\n                                    <h3 id={`${data[0].name}`}>Duration: {durations && Object.keys(durations).length > 0 && durations[data[0].name]['time']}<small>ms</small></h3>\n                                    <Table columns={columns} dataSource={data} />\n                                </Fragment>)\n                        }) : null\n                    }\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n}\n\n\nexport default TableComponent","import React, { Fragment, useState, useEffect, FC } from 'react'\nimport { Select } from 'antd';\nimport { Form, Button } from 'antd';\nimport axios from '../../../axios';\nimport {durationsType} from '../index'\ntype LayoutType = Parameters<typeof Form>[0]['layout'];\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Filter: FC<{ updateTableData(data: { data: Array<any>, durations: durationsType }): void, setModule(name: string): void , filename:string}> = ({ updateTableData, setModule , filename}) => {\n    const [form] = Form.useForm();\n    const [formLayout] = useState<LayoutType>('inline');\n    const [run, setRun] = useState<string>('1');\n    const [entryType, setEntry] = useState<Array<string>>(['longtask', 'resource']);\n\n    function handleSubmit() {\n        updateTableData({ data: [], durations: {} });\n        if (filename.length > 0) {\n            axios.post('/data', {\n                run: run,\n                entryType: JSON.stringify(entryType),\n                filename: filename\n            }).then(({ data }) => {\n                updateTableData(data);\n                setModule(filename);\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    useEffect(()=>{\n        handleSubmit();\n    },[filename])\n\n    // function handleRunChange(value: string) {\n    //     setRun(value);\n    // }\n\n    // function handleEntryChange(value: Array<string>) {\n    //     setEntry(value)\n    // }\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: { span: 4 },\n                wrapperCol: { span: 14 },\n            }\n            : null;\n\n    return (\n        <Fragment>\n            {/* <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                initialValues={{ layout: formLayout }}\n            > */}\n                {/* <Form.Item label=\"Run\" name=\"run\">\n                    <Select defaultValue=\"1\" style={{ width: 120 }} onChange={handleRunChange}>\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Entry Type\" name=\"entryType\">\n                    <Select defaultValue={['longtask', 'resource']} style={{ width: '300px' }} onChange={handleEntryChange} mode=\"multiple\" size='large'>\n                        <Option value=\"longtask\">Long Tasks</Option>\n                        <Option value=\"resource\">Resources</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form> */}\n        </Fragment>\n    )\n}\n\n\nexport default Filter","export const desc : { [key: string]: any } = {\n    \"Launchpad\":\"Reported time to interactive for each module of our products. Logged  time taken , longtasks , resources between automated click and the instance the loader disappear.\",\n    \"Agent Console\":\"Reported performance metrics for agent console by simulating user actions on reply box , assign box and macro box.\",\n    \"custom\":\"Designed a custom URL crawler to measure interactive slowness of targeted selector.\",\n    \"Quick Publish\":\"Reported time to interactive , long tasks and resources for Quick publisher module.\"\n}","import React, { useState, useEffect, FC } from 'react'\nimport { Layout, Menu } from 'antd';\nimport { FileDoneOutlined } from '@ant-design/icons';\nimport Table from './table/index'\nimport Filter from './filters';\nimport axios from '../../axios';\nimport {desc} from './description';\n\nconst { Header, Content, Sider } = Layout;\n// const { SubMenu } = Menu;\n\nexport type durationsType = { [key: string]: { time: string, actionName: string, interaction: string, numRun: string } }\n\nfunction formatFileNames(files: Array<string>) {\n    let output: { [key: string]: any } = {};\n    files.forEach(file => {\n        let arr = file.split('(');\n        if (output.hasOwnProperty(arr[0])) {\n            let date = arr[1].split(')')[0];\n            output[arr[0]].push(date);\n        } else {\n            let date = arr[1].split(')')[0];\n            output[arr[0]] = [date];\n        }\n    })\n    return output;\n}\n\nconst LayoutComponent: FC = () => {\n    const [data, setData] = useState<{ data: Array<any>, durations: durationsType }>({ data: [], durations: {} });\n    const [module, setModule] = useState<string | null>(null);\n    const [numRun, setNumRun] = useState<string | null>(null);\n    const [filename, setFileName] = useState<string>('');\n    const [fileNames, setFileNames] = useState<{ [key: string]: Array<string> }>({});\n\n    useEffect(() => {\n        axios.get('/fileNames').then(({ data }) => {\n            if (data) {\n                setFileNames(formatFileNames(data));\n                setFileName(data[0]);\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n\n    return (\n        <Layout>\n            <Header className=\"header\" style={{position:'sticky',zIndex:1000,top:'0px'}}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\">\n                    <Menu.Item key=\"1\">Measurement of Interactive Slowness</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            style={{ height: '100%' }}\n                        >\n                            {\n                                Object.keys(fileNames).map((file: string) => {\n                                    return (\n                                        <Menu.Item key={`${file}`} onClick={() => {\n                                            setModule(`${file}(${fileNames[file][0]})`);\n                                            setFileName(`${file}(${fileNames[file][0]}).json`);\n                                        }} style={{textTransform:'capitalize'}}>{file.replaceAll('-',' ')}</Menu.Item>\n                                    )\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px' }}>\n                                <Filter updateTableData={(data: { data: Array<any>, durations: durationsType }) => { setData(data) }} setModule={(name: string) => setModule(name)} filename={filename} />\n                                <h3>Module Name : {module && module.split('(')[0].replaceAll('-',' ')}</h3>\n                                {/* <h3>#Run :{numRun} </h3>\n                                <h3>Date: {module && module.split('(')[1].split(')')[0]}</h3> */}\n                                <h4>Description : {module && desc[module.split('(')[0].replaceAll('-',' ')]}</h4>\n                            </Content>\n                        </Layout>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            {\n                                module &&\n                                <Content style={{ padding: '0 24px', minHeight: 280 }}><Table data={data} setRuns={(num: string) => { setNumRun(num) }} currNumRun={numRun} setFileName={(name: string) => { setFileName(name) }} fileDates={fileNames[module.split('(')[0]]} file={module.split('(')[0]} /></Content>\n                            }\n                        </Layout></Content>\n                </Layout>\n            </Content>\n        </Layout>)\n}\n\n\nexport default LayoutComponent","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Reporter from '../reporter/index'\nimport \"../../app.css\"\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Route exact path=\"/\" component={Reporter} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}