{"version":3,"sources":["components/reporter/table/data.tsx","axios.ts","components/reporter/table/chartInclude.ts","components/reporter/table/chart.tsx","components/reporter/table/index.tsx","components/reporter/filters/index.tsx","components/reporter/index.tsx","components/app/App.tsx","index.tsx"],"names":["truncateString","string","limit","length","substring","columns","title","dataIndex","key","render","text","sorter","compare","a","b","duration","multiple","metadata","console","log","size","name","placement","style","cursor","color","synoposisColumns","href","org","format","longtask","resources","map","resource","instance","axios","create","baseURL","data","Option","Select","Chart","input","fileDates","file","setFileName","useState","colorlist","labels","setLabels","selectData","setSelectData","dataset","setDataset","setLongtaskDataset","selected","setSelected","setSelectedDate","useEffect","s","Set","forEach","entry","add","split","trim","Array","from","get","then","dates","Object","keys","longtaskDataset","i","date","modules","filter","includes","module","label","time","index","findIndex","el","IncludeList","bgColor","Math","floor","random","obj","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","pointRadius","borderWidth","tension","longtaskObj","push","generateDataset","catch","chartData","datasets","options","scales","x","display","y","plugins","marginBottom","placeholder","value","width","onChange","entity","boxSizing","padding","type","TabPane","Tabs","whiteListResources","TableComponent","durations","setRuns","currNumRun","output","setOutput","synopsis","setSynopsis","temp","datapoint","arr","out","some","rx","test","startTime","entryType","ceil","priority","replace","transferSize","interaction","ans","max","sort","final","slice","reduce","prev","curr","actionName","className","tab","dataSource","pagination","id","Filter","updateTableData","setModule","filename","Form","useForm","run","post","JSON","stringify","err","Header","Layout","Content","Sider","Menu","SubMenu","LayoutComponent","setData","numRun","setNumRun","fileNames","setFileNames","files","hasOwnProperty","formatFileNames","theme","mode","Item","height","onClick","replaceAll","minHeight","num","App","exact","path","component","Reporter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e16e936.chunk.js","sourcesContent":["import React from 'react';\nimport { Tag , Tooltip} from 'antd';\n\nfunction truncateString(string: string, limit: number) {\n    if (string.length > limit) {\n        return string.substring(0, limit) + \"...\"\n    } else {\n        return string\n    }\n}\n\nexport const columns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a>{text}</a>,\n    },\n    {\n        title: 'Duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Entry Type',\n        dataIndex: 'entryType',\n        key: 'entryType',\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Metadata',\n        dataIndex: 'metadata',\n        key: 'metadata',\n        render: (metadata: any) => {\n            console.log(metadata.size)\n            return (<div><p>{metadata && metadata.name ? <Tooltip placement=\"bottom\" title={metadata.name}><span style={{cursor:'pointer'}}>{truncateString(metadata.name, 60)}</span></Tooltip> : 'None'}</p></div>)\n        }\n    },\n    {\n        title: 'Priority',\n        key: 'priority',\n        dataIndex: 'priority',\n        render: (duration: any) => (\n            <>\n                {\n                    duration > 150 ? <Tag color={'red'} key={'high'}>\n                        High\n                    </Tag> : duration > 100 ? <Tag color={'yellow'} key={'high'}>\n                        Medium\n                    </Tag> : <Tag color={'green'} key={'high'}>\n                        Low\n                    </Tag>}\n            </>\n        ),\n    }\n];\n\nexport const synoposisColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Action Name',\n        key: 'actionName',\n        dataIndex: 'actionName',\n    }\n]","import axios from 'axios'\n\nvar instance = axios.create({\n    baseURL : \"http://13.232.71.146:8118\"\n})\n\nexport default instance","export const data: { [key: string]: any } = {\n  \"Modern Marketing\": [\n    \"Journey Facilitator\",\n    \"Content Templates\",\n    \"Workflow Engine\",\n    \"Production Dashboards\",\n    \"Brief Templates\",\n    \"Campaigns\",\n    \"Request Forms\",\n    \"Digital Asset Management\",\n  ],\n  \"Modern Research\": [\n    \"Exports\",\n    \"Benchmarking Smart Alerts Dashboard\",\n    \"Listening Smart Alerts Dashboard\",\n    \"Listening Dashboards\",\n    \"Media Insights\",\n    \"Smart Theme Explorer\",\n    \"Visual Insights\",\n    \"Smart Quick Insights\",\n    \"Topics\",\n  ],\n  \"Modern Care\": [\n    \"Care Reporting\",\n    \"Smart Responses\",\n    \"Agent Console\",\n    \"Assignment Engine\",\n    \"Proactive Prompts\",\n  ],\n  \"Modern Engagement\": [\n    \"Reporting\",\n    \"Editorial Calendar\",\n    \"Engagement Dashboards\",\n    \"User\",\n    \"Manage Pipelines\",\n    \"All Digital Conversations\",\n    \"Owned Social Accounts\",\n  ],\n};\n\nexport const color: Array<string> = [\n  \"#9E81EB\",\n  \"#40A3F5\",\n  \"#4CD2E0\",\n  \"#CBD756\",\n  \"#87BD66\",\n  \"#CFE8FC\",\n  \"#426AEA\",\n  \"#C8B9EE\",\n  \"#9FD1FA\",\n  \"#79DFEA\",\n  \"#DFE5A4\",\n  \"#B9D6A7\",\n  \"#C099C6\",\n  \"#91A9F7\",\n  \"#E3DCF6\",\n  \"#CFE8FC\",\n  \"#BCEFF4\",\n  \"#EFF2D1\",\n  \"#DCEAD3\",\n  \"#E1CDE4\",\n  \"#C8D4FB\",\n];\n","import React, { FC, useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Select } from 'antd';\nimport axios from '../../../axios';\nimport {data as IncludeList , color as colorlist} from './chartInclude';\n\nconst { Option } = Select;\n\nconst randomBetween = (min: number, max: number) => min + Math.floor(Math.random() * (max - min + 1));\n\nconst Chart: FC<{ input: Array<any>, fileDates: Array<any>, setFileName(name: string): void, file: string }> = ({ input, fileDates, setFileName, file }) => {\n    const [color] = useState<Array<string>>(colorlist);\n    const [labels, setLabels] = useState<Array<string>>([]);\n    const [selectData, setSelectData] = useState<Array<string>>([]);\n    const [dataset,setDataset] = useState<Array<string>>([]);\n    const [longtaskDatasetState,setLongtaskDataset] = useState<Array<string>>([]);\n    const [selected, setSelected] = useState<string>('');\n    const [selectedDate , setSelectedDate] = useState<string>('');\n\n    function handleRunChange(value: string) {\n        setSelected(value);\n    }\n\n    useEffect(() => {\n        if (input) {\n\n            let s = new Set<string>();\n\n            input.forEach(entry => {\n                s.add(entry.name.format.split('-')[0].trim());\n            })\n\n            setSelectData(Array.from(s));\n            setSelected(Array.from(s)[0]);\n            setSelectedDate(fileDates[0]);\n        }\n    }, [input])\n\n    function generateDataset(data:any){\n        let dates = Object.keys(data);\n        let dataset: Array<any> = [];\n        let labels : Array<any> = [];\n        let longtaskDataset: Array<any> =[];\n        for (let i in dates) {\n            let date: { [key: string]: any } = data[dates[i]];\n            let modules = Object.keys(date);\n            modules = modules.filter((name) => { return name.includes(selected) });\n            modules.forEach((module: string) => {\n                let label = module.split('-')[1].trim();\n                let time = date[module].time;\n                let longtask = date[module].longtask;\n                let index = dataset.findIndex((el) => { return el.label === label });\n                if(Object.keys(IncludeList).includes(selected) && !IncludeList[selected].includes(label)) return;\n                if (index === -1) {\n                    let bgColor = color[Math.floor(Math.random() * color.length)];\n                    let obj = {\n                        label, data: [time], borderColor: bgColor,\n                        backgroundColor:bgColor,\n                        pointBackgroundColor: bgColor,\n                        pointBorderColor: bgColor,\n                        pointRadius: 5,\n                        borderWidth: 2,\n                        tension: 0\n                    };\n                    let longtaskObj = {\n                        label, data: [longtask], borderColor: bgColor,\n                        backgroundColor:bgColor,\n                        pointBackgroundColor: bgColor,\n                        pointBorderColor: bgColor,\n                        pointRadius: 5,\n                        borderWidth: 1,\n                        tension: 0\n                    }\n                    dataset.push(obj)\n                    longtaskDataset.push(longtaskObj);\n                } else {\n                    dataset[index]['data'].push(time);\n                    longtaskDataset[index]['data'].push(longtask);\n                }\n            })\n            labels.push(dates[i]);\n        }\n        setDataset(dataset);\n        setLabels(labels);\n        setLongtaskDataset(longtaskDataset);\n    }\n\n    useEffect(() => {\n        axios.get(`/chart/${file}`).then(({ data }) => {\n            generateDataset(data);\n        }).catch();\n    }, [file, selected]);\n\n    const chartData = {\n        labels,\n        datasets: dataset\n    };\n\n    const longtaskChartData = {\n        labels,\n        datasets:longtaskDatasetState\n    }\n\n    const options = {\n        scales: {\n            x: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Date'\n                }\n              },\n              y: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Time to Interactive (ms)'\n                }\n              }\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: selected\n            }\n        }\n    };\n\n    return (\n        <div style={{marginBottom:'10px'}}>\n            <Select placeholder=\"Select Filter\" value={selected} style={{ width: '300px' , marginBottom:'10px' }} onChange={handleRunChange}>\n                {\n                    selectData.map((entity) => {\n                        return <Option value={entity}>{entity}</Option>\n                    })\n                }\n            </Select>\n            {/* <Select placeholder=\"Select Filter\" value={selectedDate} style={{ width: '300px' }} onChange={handleDateChange}>\n                {\n                    fileDates.map(date => {\n                        return <Option key={`${file}-${date}`} value={`${date}`} >{date}</Option>\n                    })\n                }\n            </Select> */}\n            {/* <h5>Time to intercative </h5> */}\n            <div style={{backgroundColor:'white', boxSizing:'border-box', padding:'10px'}}>\n            <Line data={chartData} options={options} type=\"Line\" />\n            </div>\n            {/* <h5>long Task</h5>\n           <Line data={longtaskChartData} options={options} type=\"Line\" /> */}\n        </div>\n    );\n}\n\n\nexport default Chart","import React, { FC, Fragment, useEffect, useState } from 'react'\nimport { columns, synoposisColumns } from './data'\nimport { Table } from 'antd';\nimport { durationsType } from '../index';\nimport { Tabs } from 'antd';\nimport Chart from './chart';\n\nconst { TabPane } = Tabs;\n\nconst whiteListResources = [/app.getsentry.com/, /dap.sprinklr.com/, /user\\/session\\/details/, /.js/];\n\nconst TableComponent: FC<{ data: { data: Array<any>, durations: durationsType }, setRuns(num: string): void, currNumRun: string | null, setFileName(name: string): void, fileDates: Array<string>, file: string }> = ({ data: { data, durations }, setRuns, currNumRun, fileDates, file, setFileName }) => {\n    const [output, setOutput] = useState<Array<any>>([]);\n    const [synopsis, setSynopsis] = useState<Array<any>>([]);\n\n    useEffect(() => {\n        let temp: Array<any> = []\n        if (data && data.length > 0) {\n            temp = data.map((datapoint, index) => {\n                let key = Object.keys(datapoint)[0];\n                let arr = datapoint[key];\n                let out = [];\n                if (arr && arr.length > 0) {\n                    for (let i of arr) {\n                        let isExcluded = whiteListResources.some((rx) =>\n                            rx.test(i.name)\n                        );\n                        if (!isExcluded) {\n                            out.push({\n                                key: `${index}-${i.startTime}`,\n                                name: key,\n                                entryType: i.entryType,\n                                duration: Math.ceil(i.duration),\n                                priority: Math.ceil(i.duration),\n                                metadata: {\n                                    name: i.entryType === 'resource' ? i.name.replace('https://champagne.sprinklr.com','') : 'None',\n                                    size: i.entryType === 'resource' ? i.transferSize : 0\n                                },\n                                interaction: 'Click'\n                            })\n                        } else if (out.length === 0) {\n                            out.push({\n                                key: `${index}-${Math.random()}`,\n                                name: key,\n                            })\n                        }\n                    }\n                } else {\n                    out.push({\n                        key: `${index}-${Math.random()}`,\n                        name: key,\n                    })\n                }\n                return out;\n            })\n        }\n        setOutput(temp);\n    }, [data])\n\n    useEffect(() => {\n        if (!durations || Object.keys(durations).length === 0) return;\n        let ans: Array<any> = [];\n        const sorter = (a: any, b: any) => {\n            return a.time < b.time ? -1 : 1;\n        };\n        for (let key in durations) {\n            let data = output.filter((arr) => {\n                return arr[0].name === key\n            })[0];\n            let longtask = 0;\n            let resource: Array<any> = [];\n            if (data) {\n                data.forEach((data: any) => {\n                    if (data.entryType === 'longtask') {\n                        longtask = Math.max(longtask, data.duration)\n                    }\n                    if (data.entryType === 'resource') {\n                        resource.push({ name: data.metadata.name, time: data.metadata.time });\n                    }\n                })\n                resource.sort(sorter)\n                let slicedResources = resource.slice(0, 5);\n                let final = slicedResources.reduce((prev, curr) => { prev.push(curr.name); return prev }, new Array<string>());\n                resource = final;\n            }\n            ans.push({\n                name: { org: key, format: `${key}` },\n                longtask: longtask,\n                resource: resource,\n                duration: durations[key]['time'],\n                interaction: durations[key]['interaction'],\n                actionName: durations[key]['actionName']\n            })\n            if (!currNumRun) setRuns(durations[key]['numRun']);\n        }\n        setSynopsis(ans);\n    }, [output, durations]);\n\n\n    return (\n        <div className=\"card-container\">\n            <Chart input={synopsis} fileDates={fileDates} setFileName={setFileName} file={file} />\n            <Tabs type=\"card\">\n                <TabPane tab=\"Summary\" key=\"1\">\n                    <div>\n                        <Table columns={synoposisColumns} dataSource={synopsis} pagination={false} />\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Detail Report\" key=\"2\">\n                    {\n                        output && output.length > 0 ? output.map((data: Array<{ name: string }>) => {\n                            return (\n                                <Fragment key={`${data[0].name}`}>\n                                    <h3 id={`${data[0].name}`}>Duration: {durations && Object.keys(durations).length > 0 && durations[data[0].name]['time']}<small>ms</small></h3>\n                                    <Table columns={columns} dataSource={data} />\n                                </Fragment>)\n                        }) : null\n                    }\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n}\n\n\nexport default TableComponent","import React, { Fragment, useState, useEffect, FC } from 'react'\nimport { Select } from 'antd';\nimport { Form, Button } from 'antd';\nimport axios from '../../../axios';\nimport {durationsType} from '../index'\ntype LayoutType = Parameters<typeof Form>[0]['layout'];\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Filter: FC<{ updateTableData(data: { data: Array<any>, durations: durationsType }): void, setModule(name: string): void , filename:string}> = ({ updateTableData, setModule , filename}) => {\n    const [form] = Form.useForm();\n    const [formLayout] = useState<LayoutType>('inline');\n    const [run, setRun] = useState<string>('1');\n    const [entryType, setEntry] = useState<Array<string>>(['longtask', 'resource']);\n\n    function handleSubmit() {\n        updateTableData({ data: [], durations: {} });\n        if (filename.length > 0) {\n            axios.post('/data', {\n                run: run,\n                entryType: JSON.stringify(entryType),\n                filename: filename\n            }).then(({ data }) => {\n                updateTableData(data);\n                setModule(filename);\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    useEffect(()=>{\n        console.log(filename);\n        handleSubmit();\n    },[filename])\n\n    function handleRunChange(value: string) {\n        setRun(value);\n    }\n\n    function handleEntryChange(value: Array<string>) {\n        setEntry(value)\n    }\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: { span: 4 },\n                wrapperCol: { span: 14 },\n            }\n            : null;\n\n    return (\n        <Fragment>\n            {/* <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                initialValues={{ layout: formLayout }}\n            > */}\n                {/* <Form.Item label=\"Run\" name=\"run\">\n                    <Select defaultValue=\"1\" style={{ width: 120 }} onChange={handleRunChange}>\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Entry Type\" name=\"entryType\">\n                    <Select defaultValue={['longtask', 'resource']} style={{ width: '300px' }} onChange={handleEntryChange} mode=\"multiple\" size='large'>\n                        <Option value=\"longtask\">Long Tasks</Option>\n                        <Option value=\"resource\">Resources</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form> */}\n        </Fragment>\n    )\n}\n\n\nexport default Filter","import React, { useState, useEffect, FC } from 'react'\nimport { Layout, Menu } from 'antd';\nimport { FileDoneOutlined } from '@ant-design/icons';\nimport Table from './table/index'\nimport Filter from './filters';\nimport axios from '../../axios';\n\nconst { Header, Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport type durationsType = { [key: string]: { time: string, actionName: string, interaction: string, numRun: string } }\n\nfunction formatFileNames(files: Array<string>) {\n    let output: { [key: string]: any } = {};\n    files.forEach(file => {\n        let arr = file.split('(');\n        if (output.hasOwnProperty(arr[0])) {\n            let date = arr[1].split(')')[0];\n            output[arr[0]].push(date);\n        } else {\n            let date = arr[1].split(')')[0];\n            output[arr[0]] = [date];\n        }\n    })\n    return output;\n}\n\nconst LayoutComponent: FC = () => {\n    const [data, setData] = useState<{ data: Array<any>, durations: durationsType }>({ data: [], durations: {} });\n    const [module, setModule] = useState<string | null>(null);\n    const [numRun, setNumRun] = useState<string | null>(null);\n    const [filename, setFileName] = useState<string>('');\n    const [fileNames, setFileNames] = useState<{ [key: string]: Array<string> }>({});\n\n    useEffect(() => {\n        axios.get('/fileNames').then(({ data }) => {\n            if (data) {\n                setFileNames(formatFileNames(data));\n                setFileName(data[0]);\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n\n    return (\n        <Layout>\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\">\n                    <Menu.Item key=\"1\">Measurement of Interactive Slowness</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            style={{ height: '100%' }}\n                        >\n                            {\n                                Object.keys(fileNames).map((file: string) => {\n                                    return (\n                                        <Menu.Item key={`${file}`} onClick={() => {\n                                            setModule(`${file}(${fileNames[file][0]})`);\n                                            setFileName(`${file}(${fileNames[file][0]}).json`);\n                                        }}>{file.replaceAll('-',' ')}</Menu.Item>\n                                    )\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px' }}>\n                                <Filter updateTableData={(data: { data: Array<any>, durations: durationsType }) => { setData(data) }} setModule={(name: string) => setModule(name)} filename={filename} />\n                                <h3>Module Name : {module && module.split('(')[0].replaceAll('-',' ')}</h3>\n                                {/* <h3>#Run :{numRun} </h3>\n                                <h3>Date: {module && module.split('(')[1].split(')')[0]}</h3> */}\n                            </Content>\n                        </Layout>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            {\n                                module &&\n                                <Content style={{ padding: '0 24px', minHeight: 280 }}><Table data={data} setRuns={(num: string) => { setNumRun(num) }} currNumRun={numRun} setFileName={(name: string) => { setFileName(name) }} fileDates={fileNames[module.split('(')[0]]} file={module.split('(')[0]} /></Content>\n                            }\n                        </Layout></Content>\n                </Layout>\n            </Content>\n        </Layout>)\n}\n\n\nexport default LayoutComponent","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Reporter from '../reporter/index'\nimport \"../../app.css\"\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Route exact path=\"/\" component={Reporter} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}