{"version":3,"sources":["components/reporter/table/data.tsx","axios.ts","components/reporter/table/chartInclude.ts","components/reporter/table/chart.tsx","components/reporter/table/index.tsx","components/reporter/filters/index.tsx","components/reporter/description.ts","components/reporter/index.tsx","components/app/App.tsx","index.tsx"],"names":["truncateString","string","limit","length","substring","columns","title","dataIndex","key","render","text","sorter","compare","a","b","duration","multiple","metadata","name","placement","style","cursor","synoposisColumns","href","org","format","longtask","resources","map","resource","launchpadColumns","instance","axios","create","baseURL","data","color","Option","Select","randomBetween","min","max","Math","floor","random","Chart","input","fileDates","setCloudName","file","theme","useState","colorlist","labels","setLabels","selectData","setSelectData","dataset","setDataset","selected","setSelected","setSelectedDate","useEffect","s","Set","forEach","entry","add","split","trim","cloud","Array","from","get","then","dates","Object","keys","i","date","modules","filter","includes","module","label","time","index","findIndex","el","IncludeList","r","g","bgColor","console","log","obj","borderColor","backgroundColor","tension","push","formatDate","moment","generateDataset","catch","chartData","datasets","options","scales","x","display","grid","ticks","y","plugins","legend","marginBottom","placeholder","value","width","onChange","entity","boxSizing","padding","border","type","id","TabPane","Tabs","whiteListResources","TableComponent","durations","setRuns","currNumRun","output","setOutput","synopsis","setSynopsis","temp","datapoint","arr","out","some","rx","test","startTime","entryType","ceil","priority","replace","size","transferSize","interaction","ans","sort","final","slice","reduce","prev","curr","actionName","className","tab","dataSource","undefined","includeList","synopsisFilter","pagination","Filter","updateTableData","setModule","filename","Form","useForm","run","post","JSON","stringify","err","desc","Header","Layout","Content","Sider","LayoutComponent","setTheme","setData","numRun","setNumRun","setFileName","fileNames","setFileNames","files","hasOwnProperty","formatFileNames","position","zIndex","top","mode","Item","right","checked","height","onClick","textTransform","replaceAll","minHeight","num","App","document","body","classList","remove","exact","path","props","ReactDOM","StrictMode","getElementById"],"mappings":"iRAGA,SAASA,EAAeC,EAAgBC,GACpC,OAAID,EAAOE,OAASD,EACTD,EAAOG,UAAU,EAAGF,GAAS,MAE7BD,EAKR,IAAMI,EAAU,CACnB,CACIC,MAAO,SACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OAAe,4BAAIA,MAE/B,CACIJ,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,GAAD,OAAe,8BAAIA,EAAJ,IAAU,2CACjCC,OAAQ,CACJC,QAAS,SAACC,EAAQC,GAAT,OAAoBD,EAAEE,SAAWD,EAAEC,UAC5CC,SAAU,IAGlB,CACIV,MAAO,aACPC,UAAW,YACXC,IAAK,aAET,CACIF,MAAO,cACPC,UAAW,cACXC,IAAK,eAET,CACIF,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACQ,GACL,OAAQ,8BAAK,4BAAIA,GAAYA,EAASC,KAAO,cAAC,IAAD,CAASC,UAAU,SAASb,MAAOW,EAASC,KAA5C,SAAkD,sBAAME,MAAO,CAACC,OAAO,WAArB,SAAkCrB,EAAeiB,EAASC,KAAM,QAAwB,cAKtLI,EAAmB,CAC5B,CACIhB,MAAO,SACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OAAe,mBAAGa,KAAI,WAAMb,EAAKc,KAAlB,SAA0Bd,EAAKe,WAE1D,CACInB,MAAO,sBACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,GAAD,OAAe,8BAAIA,EAAJ,IAAU,2CACjCC,OAAQ,CACJC,QAAS,SAACC,EAAQC,GAAT,OAAoBD,EAAEE,SAAWD,EAAEC,UAC5CC,SAAU,IAGlB,CACIV,MAAO,kBACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,GAAD,OAAe,8BAAIA,EAAJ,IAAU,2CACjCC,OAAQ,CACJC,QAAS,SAACC,EAAQC,GAAT,OAAoBD,EAAEa,SAAWZ,EAAEY,UAC5CV,SAAU,IAGlB,CACIV,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACkB,GACL,OAAOA,EAAUC,KAAI,SAACC,GAClB,OAAQ,cAAC,IAAD,CAASV,UAAU,SAASb,MAAOuB,EAAnC,SAA8C,mBAAGT,MAAO,CAACC,OAAO,WAAlB,SAA+BrB,EAAe6B,EAAU,aAI1H,CACIvB,MAAO,cACPC,UAAW,cACXC,IAAK,gBAIAsB,EAAmB,CAC5B,CACIxB,MAAO,SACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OAAe,mBAAGa,KAAI,WAAMb,EAAKc,KAAlB,SAA0Bd,EAAKe,WAE1D,CACInB,MAAO,sBACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,GAAD,OAAe,8BAAIA,EAAJ,IAAU,2CACjCC,OAAQ,CACJC,QAAS,SAACC,EAAQC,GAAT,OAAoBD,EAAEE,SAAWD,EAAEC,UAC5CC,SAAU,IAGlB,CACIV,MAAO,kBACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,GAAD,OAAe,8BAAIA,EAAJ,IAAU,2CACjCC,OAAQ,CACJC,QAAS,SAACC,EAAQC,GAAT,OAAoBD,EAAEa,SAAWZ,EAAEY,UAC5CV,SAAU,IAGlB,CACIV,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACkB,GACL,OAAOA,EAAUC,KAAI,SAACC,GAClB,OAAQ,cAAC,IAAD,CAASV,UAAU,SAASb,MAAOuB,EAAnC,SAA8C,mBAAGT,MAAO,CAACC,OAAO,WAAlB,SAA+BrB,EAAe6B,EAAU,c,4CCxH/GE,E,OAJAC,EAAMC,OAAO,CACxBC,QAAU,8BCHDC,EAA+B,CAC1C,mBAAoB,CAClB,kBACA,wBACA,YACA,gBACA,4BAEF,kBAAmB,CACjB,mCACA,uBACA,iBACA,uBACA,mBAEF,cAAe,CACb,iBACA,kBACA,gBACA,oBACA,qBAEF,oBAAqB,CACnB,YACA,qBACA,wBACA,qBAISC,EAAuB,CAClC,UACA,UACA,UACA,UACA,UACA,W,kBC7BMC,EAAWC,IAAXD,OAEFE,EAAgB,SAACC,EAAcC,GAAf,OAA8BD,EAAME,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,KAoLnFK,EAlLkH,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,KAAOC,EAAW,EAAXA,MACvK,EAAgBC,mBAAwBC,GACxC,GADA,oBAC4BD,mBAAwB,KAApD,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAoCH,mBAAwB,IAA5D,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA8BL,mBAAwB,IAAtD,mBAAOM,EAAP,KAAgBC,EAAhB,KAEA,EAAgCP,mBAAiB,IAAjD,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAwCT,mBAAiB,IAAzD,mBAAqBU,GAArB,WAOAC,qBAAU,WACN,GAAIhB,EAAO,CAEP,IAAIiB,EAAI,IAAIC,IAEZlB,EAAMmB,SAAQ,SAAAC,GACVH,EAAEI,IAAID,EAAMhD,KAAKM,IAAI4C,MAAM,KAAK,GAAGC,WAGvC,IAAIC,EAASC,MAAMC,KAAKT,GAAG,GAC3Bf,EAAasB,GACbV,EAAYU,GACZd,EAAce,MAAMC,KAAKT,IACzBF,EAAgBd,EAAU,OAE/B,CAACD,IAyDJgB,qBAAU,WACN9B,EAAMyC,IAAN,iBAAoBxB,IAAQyB,MAAK,YAAe,IAAZvC,EAAW,EAAXA,KAC5BA,GAzDZ,SAAyBA,GACrB,IAAIwC,EAAQC,OAAOC,KAAK1C,GACpBsB,EAAsB,GACtBJ,EAAqB,GAEzB,IAAK,IAAIyB,KAAKH,EAAO,CACjB,IAAII,EAA+B5C,EAAKwC,EAAMG,IAC1CE,EAAUJ,OAAOC,KAAKE,GAC1BC,EAAUA,EAAQC,QAAO,SAAC/D,GAAW,OAAOA,EAAKgE,SAASvB,MAHzC,oBAICqB,GAJD,yBAITG,EAJS,QAKTC,EAAQD,EAAOf,MAAM,KAAK,GAAGC,OAC7BgB,EAAON,EAAKI,GAAQE,KAEpBC,EAAQ7B,EAAQ8B,WAAU,SAACC,GAAS,OAAOA,EAAGJ,QAAUA,KAC5D,GAAIR,OAAOC,KAAKY,GAAaP,SAASvB,KAAc8B,EAAY9B,GAAUuB,SAASE,GAAS,iBAExF,IAAe,IAAXE,EAAc,CACd,IAAMI,EAAInD,EAAc,IAAK,KACvBoD,EAAIpD,EAAc,IAAK,KACvBzB,EAAIyB,EAAc,IAAK,KACzBqD,EAAO,eAAWF,EAAX,YAAgBC,EAAhB,YAAqB7E,EAArB,OACX+E,QAAQC,IAAIF,GACZ,IAAIG,EAAM,CACNX,QAAOjD,KAAM,CAACkD,GACdW,YAAaJ,EACbK,gBAAiBL,EACjBM,QAAS,IAWbzC,EAAQ0C,KAAKJ,QAGbtC,EAAQ6B,GAAR,KAAuBa,KAAKd,IA/BxC,IAAI,EAAJ,qBAA2B,IAJV,8BAwCjB,IAAIe,EAAazB,EAAMG,GAAGV,MAAM,KAChCf,EAAO8C,KAAKE,IAAO,GAAD,OAAID,EAAW,GAAf,YAAqBA,EAAW,GAAhC,YAAsCA,EAAW,KAAM3E,OAAO,YAEhFgC,EAAQtD,OAAS,GAAKsD,EAAQtD,QAAU,IACxCuD,EAAWD,GACXH,EAAUD,IAQNiD,CAAgBnE,MAErBoE,UACJ,CAACtD,EAAMU,IAEV,IAAM6C,EAAY,CACdnD,SACAoD,SAAUhD,GAQRiD,EAAU,CACZC,OAAQ,CACJC,EAAG,CACCC,SAAS,EACTvG,MAAO,CACHuG,SAAS,EACTnG,KAAM,OACN0B,MAAiB,UAAVc,EAAoB,QAAU,WAEzC4D,KAAK,CACDD,SAAQ,EACRzE,MAAiB,UAAVc,EAAoB,UAAW,aAE1C6D,MAAM,CACF3E,MAAiB,UAAVc,EAAoB,QAAU,YAG7C8D,EAAG,CACCH,SAAS,EACTvG,MAAO,CACHuG,SAAS,EACTnG,KAAM,2BACN0B,MAAgB,UAAVc,EAAoB,QAAU,WAExC4D,KAAK,CACD1E,MAAiB,UAAVc,EAAoB,UAAW,aAE1C6D,MAAM,CACF3E,MAAiB,UAAVc,EAAoB,QAAU,aAIjD+D,QAAQ,CACJ3G,MAAO,CACHuG,SAAS,EACTnG,KAAMiD,EACNvB,MAAgB,UAAVc,EAAoB,QAAU,WAExCgE,OAAQ,CACJL,SAAS,EACTxD,OAAQ,CACJjB,MAAkB,UAAVc,EAAoB,QAAU,cAMtD,OACI,sBAAK9B,MAAO,CAAE+F,aAAc,QAA5B,UACK5D,GAAcA,EAAWpD,OAAS,GAAK,cAAC,IAAD,CAAQiH,YAAY,gBAAgBC,MAAO1D,EAAUvC,MAAO,CAAEkG,MAAO,QAASH,aAAc,QAAUI,SAhJtJ,SAAyBF,GACrBzD,EAAYyD,GACZrE,EAAaqE,IA8I+B,SAEhC9D,EAAW3B,KAAI,SAAC4F,GACZ,OAAO,cAACnF,EAAD,CAAQgF,MAAOG,EAAf,SAAwBA,SAY3C,qBAAMpG,MAAiB,UAAV8B,EAAoB,CAAE+C,gBAAiB,QAASwB,UAAW,aAAcC,QAAS,QAAW,CAAEzB,gBAAiB,gBAAiBwB,UAAW,aAAcC,QAAS,OAASC,OAAO,+BAAhM,SACI,cAAC,IAAD,CAAMxF,KAAMqE,EAAWE,QAASA,EAASkB,KAAK,OAAOC,GAAG,iBC5KhEC,EAAYC,IAAZD,QAEFE,EAAqB,CAAC,oBAAqB,mBAAoB,yBAA0B,OA2HhFC,EAzHsN,SAAC,GAA+E,IAAD,IAA5E9F,KAAQA,EAAoE,EAApEA,KAAM+F,EAA8D,EAA9DA,UAAaC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,WAAYrF,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrS,EAA4BC,mBAAqB,IAAjD,mBAAOkF,EAAP,KAAeC,EAAf,KACA,EAAgCnF,mBAAqB,IAArD,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAiCrF,mBAAiB,IAAlD,mBAAOQ,EAAP,KAAkBC,EAAlB,KA4FA,OA1FAE,qBAAU,WACN,IAAI2E,EAAmB,GACnBtG,GAAQA,EAAKhC,OAAS,IACtBsI,EAAOtG,EAAKP,KAAI,SAAC8G,EAAWpD,GACxB,IAAI9E,EAAMoE,OAAOC,KAAK6D,GAAW,GAC7BC,EAAMD,EAAUlI,GAChBoI,EAAM,GACV,GAAID,GAAOA,EAAIxI,OAAS,EAAG,CAAC,IAAD,gBACTwI,GADS,yBACd7D,EADc,QAEFkD,EAAmBa,MAAK,SAACC,GAAD,OACrCA,EAAGC,KAAKjE,EAAE5D,SAeY,IAAf0H,EAAIzI,QACXyI,EAAIzC,KAAK,CACL3F,IAAI,GAAD,OAAK8E,EAAL,YAAc5C,KAAKE,UACtB1B,KAAMV,IAfVoI,EAAIzC,KAAK,CACL3F,IAAI,GAAD,OAAK8E,EAAL,YAAcR,EAAEkE,WACnB9H,KAAMV,EACNyI,UAAWnE,EAAEmE,UACblI,SAAU2B,KAAKwG,KAAKpE,EAAE/D,UACtBoI,SAAUzG,KAAKwG,KAAKpE,EAAE/D,UACtBE,SAAU,CACNC,KAAsB,aAAhB4D,EAAEmE,UAA2BnE,EAAE5D,KAAKkI,QAAQ,iCAAiC,IAAM,OACzFC,KAAsB,aAAhBvE,EAAEmE,UAA2BnE,EAAEwE,aAAe,GAExDC,YAAa,WAfzB,2BAAoB,IADG,oCA0BvBX,EAAIzC,KAAK,CACL3F,IAAI,GAAD,OAAK8E,EAAL,YAAc5C,KAAKE,UACtB1B,KAAMV,IAGd,OAAOoI,MAGfN,EAAUG,KACX,CAACtG,IAEJ2B,qBAAU,WACN,GAAKoE,GAA+C,IAAlCtD,OAAOC,KAAKqD,GAAW/H,OAAzC,CACA,IAAIqJ,EAAkB,GAChB7I,EAAS,SAACE,EAAQC,GACpB,OAAOD,EAAEwE,KAAOvE,EAAEuE,MAAQ,EAAI,GAJtB,WAMH7E,GACL,IAAI2B,EAAOkG,EAAOpD,QAAO,SAAC0D,GACtB,OAAOA,EAAI,GAAGzH,OAASV,KACxB,GACCkB,EAAW,EACXG,EAAuB,GAC3B,GAAIM,EAAM,CACNA,EAAK8B,SAAQ,SAAC9B,GACa,aAAnBA,EAAK8G,YACLvH,EAAWgB,KAAKD,IAAIf,EAAUS,EAAKpB,WAEhB,aAAnBoB,EAAK8G,WACLpH,EAASsE,KAAK,CAAEjF,KAAMiB,EAAKlB,SAASC,KAAMmE,KAAMlD,EAAKlB,SAASoE,UAGtExD,EAAS4H,KAAK9I,GACd,IACI+I,EADkB7H,EAAS8H,MAAM,EAAG,GACZC,QAAO,SAACC,EAAMC,GAAiC,OAAtBD,EAAK1D,KAAK2D,EAAK5I,MAAc2I,IAAQ,IAAItF,OAC9F1C,EAAW6H,EAEfF,EAAIrD,KAAK,CACLjF,KAAM,CAAEM,IAAKhB,EAAKiB,OAAO,GAAD,OAAKjB,EAAI4D,MAAM,KAAK,GAAGC,SAC/C3C,SAAUA,EACVG,SAAUA,EACVd,SAAUmH,EAAU1H,GAAV,KACV+I,YAAarB,EAAU1H,GAAV,YACbuJ,WAAY7B,EAAU1H,GAAV,aAEX4H,GAAYD,EAAQD,EAAU1H,GAAV,SA5B7B,IAAK,IAAIA,KAAO0H,EAAY,EAAnB1H,GA8BTgI,EAAYgB,MACb,CAACnB,EAAQH,IAUR,sBAAK8B,UAAU,iBAAf,UACI,cAAC,EAAD,CAAOlH,MAAOyF,EAAUxF,UAAWA,EAAWC,aAAc,SAAC9B,GAAe0C,EAAY1C,IAAQ+B,KAAMA,EAAMC,MAAOA,IACnH,eAAC,IAAD,CAAM0E,KAAK,OAAX,UACI,cAACE,EAAD,CAASmC,IAAI,UAAb,SACI,8BACI,cAAC,IAAD,CAAO5J,QAAU4C,EAAKiC,SAAS,aAAcpD,EAAkBR,EAAkB4I,WAbrG,SAAwB/H,GACpB,YAAoBgI,IAAZxG,EAAwBxB,EAAK8C,QAAO,SAAAO,GACzC,QAAOZ,OAAOC,KAAKuF,GAAalF,SAASvB,KAAeyG,EAAYzG,GAAUuB,SAASM,EAAGtE,KAAKO,UAAkB+D,EAAGtE,KAAKM,IAAI4C,MAAM,KAAK,GAAGC,SAAWV,KACpJ,GAUwG0G,CAAe9B,GAAW+B,YAAY,OAFhH,KAK3B,cAACxC,EAAD,CAASmC,IAAI,gBAAb,SAEK5B,GAAUA,EAAOlI,OAAS,EAAIkI,EAAOzG,KAAI,SAACO,GACnC,OACI,eAAC,WAAD,WACI,qBAAI0F,GAAE,UAAK1F,EAAK,GAAGjB,MAAnB,uBAAsCgH,GAAatD,OAAOC,KAAKqD,GAAW/H,OAAS,GAAK+H,EAAU/F,EAAK,GAAGjB,MAAlB,KAAgC,0CACxH,cAAC,IAAD,CAAOb,QAASA,EAAS6J,WAAY/H,MAFzC,UAAkBA,EAAK,GAAGjB,UAI7B,MARoB,Y,SC7BlCqJ,GAhFIjI,IAAXD,OAM4I,SAAC,GAA8C,IAA5CmI,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,UAAYC,EAAc,EAAdA,SAChL,EAAeC,IAAKC,UACpB,GADA,oBACqBzH,mBAAqB,WAC1C,GADA,oBACsBA,mBAAiB,MAAvC,mBAAO0H,EAAP,KACA,GADA,KAC8B1H,mBAAwB,CAAC,WAAY,cAAnE,mBAAO8F,EAAP,UAkBAnF,qBAAU,WAfN0G,EAAgB,CAAErI,KAAM,GAAI+F,UAAW,KACnCwC,EAASvK,OAAS,GAClB6B,EAAM8I,KAAK,QAAS,CAChBD,IAAKA,EACL5B,UAAW8B,KAAKC,UAAU/B,GAC1ByB,SAAUA,IACXhG,MAAK,YAAe,IAAZvC,EAAW,EAAXA,KACPqI,EAAgBrI,GAChBsI,EAAUC,MACXnE,OAAM,SAAA0E,GACLpF,QAAQC,IAAImF,QAOtB,CAACP,IAkBH,OACI,cAAC,WAAD,MCxDKQ,EAAgC,CACzC,UAAY,0KACZ,gBAAgB,qHAChB,OAAS,sFACT,gBAAgB,uF,SCKZC,EAA2BC,IAA3BD,OAAQE,EAAmBD,IAAnBC,QAASC,EAAUF,IAAVE,MAoBzB,IAwEeC,EAxEkE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAWtI,EAAY,EAAZA,MAC3F,EAAwBC,mBAAyD,CAAEhB,KAAM,GAAI+F,UAAW,KAAxG,mBAAO/F,EAAP,KAAasJ,EAAb,KACA,EAA4BtI,mBAAwB,MAApD,mBAAOgC,EAAP,KAAesF,EAAf,KACA,EAA4BtH,mBAAwB,MAApD,mBAAOuI,EAAP,KAAeC,EAAf,KACA,EAAgCxI,mBAAiB,IAAjD,mBAAOuH,EAAP,KAAiBkB,EAAjB,KACA,EAAkCzI,mBAA2C,IAA7E,mBAAO0I,EAAP,KAAkBC,EAAlB,KAiBA,OAfAhI,qBAAU,WACN9B,EAAMyC,IAAI,cAAcC,MAAK,YAAe,IAAZvC,EAAW,EAAXA,KACxBA,IACA2J,EAzBhB,SAAyBC,GACrB,IAAI1D,EAAiC,GAWrC,OAVA0D,EAAM9H,SAAQ,SAAAhB,GACV,IAAI0F,EAAM1F,EAAKmB,MAAM,KACrB,GAAIiE,EAAO2D,eAAerD,EAAI,IAAK,CAC/B,IAAI5D,EAAO4D,EAAI,GAAGvE,MAAM,KAAK,GAC7BiE,EAAOM,EAAI,IAAIxC,KAAKpB,OACjB,CACH,IAAIA,EAAO4D,EAAI,GAAGvE,MAAM,KAAK,GAC7BiE,EAAOM,EAAI,IAAM,CAAC5D,OAGnBsD,EAakB4D,CAAgB9J,IAC7ByJ,EAAYzJ,EAAK,QAEtBoE,OAAM,SAAA0E,GACLpF,QAAQC,IAAImF,QAEjB,IAOC,eAAC,IAAD,WACI,eAACE,EAAD,CAAQnB,UAAU,SAAS5I,MAAO,CAAE8K,SAAU,SAAUC,OAAQ,IAAMC,IAAK,OAA3E,UACI,qBAAKpC,UAAU,SACf,eAAC,IAAD,CAAM9G,MAAM,OAAOmJ,KAAK,aAAxB,UACI,cAAC,IAAKC,KAAN,CAAmBlL,MAAe,SAAR8B,EAAe,CAACd,MAAM,SAAS,GAAzD,gDAAe,KACf,sBAAK4H,UAAU,OAAO5I,MAAO,CAAC8K,SAAS,WAAYK,MAAM,SAAzD,wBAA8E,cAAC,IAAD,CAAQhF,SAVtG,SAAkBiF,GACdhB,EAASgB,eAYL,cAACnB,EAAD,CAASjK,MAAO,CAAEsG,QAAS,UAA3B,SACI,eAAC,IAAD,CAAQsC,UAAU,yBAAyB5I,MAAO,CAAEsG,QAAS,UAA7D,UACI,cAAC4D,EAAD,CAAOtB,UAAU,yBAAyB1C,MAAO,IAAjD,SACI,cAAC,IAAD,CACI+E,KAAK,SACLjL,MAAO,CAAEqL,OAAQ,QAFrB,SAKQ7H,OAAOC,KAAKgH,GAAWjK,KAAI,SAACqB,GACxB,OACI,cAAC,IAAKqJ,KAAN,CAA2BI,QAAS,WAChCjC,EAAU,GAAD,OAAIxH,EAAJ,YAAY4I,EAAU5I,GAAM,GAA5B,MACT2I,EAAY,GAAD,OAAI3I,EAAJ,YAAY4I,EAAU5I,GAAM,GAA5B,YACZ7B,MAAO,CAAEuL,cAAe,cAH3B,SAG4C1J,EAAK2J,WAAW,IAAK,MAHjE,UAAmB3J,WASvC,eAACoI,EAAD,CAASjK,MAAO,CAAEsG,QAAS,SAAUmF,UAAW,KAAhD,UACI,cAAC,IAAD,CAAQ7C,UAAU,yBAAyB5I,MAAO,CAAEsG,QAAS,UAA7D,SACI,eAAC2D,EAAD,CAASjK,MAAO,CAAEsG,QAAS,UAA3B,UACI,cAAC,EAAD,CAAQ8C,gBAAiB,SAACrI,GAA2DsJ,EAAQtJ,IAASsI,UAAW,SAACvJ,GAAD,OAAkBuJ,EAAUvJ,IAAOwJ,SAAUA,IAC9J,gDAAmBvF,GAAUA,EAAOf,MAAM,KAAK,GAAGwI,WAAW,IAAK,QAGlE,gDAAmBzH,GAAU+F,EAAK/F,EAAOf,MAAM,KAAK,GAAGwI,WAAW,IAAK,cAG/E,cAAC,IAAD,CAAQ5C,UAAU,yBAAyB5I,MAAO,CAAEsG,QAAS,UAA7D,SAEQvC,GACA,cAACkG,EAAD,CAASjK,MAAO,CAAEsG,QAAS,SAAUmF,UAAW,KAAhD,SAAuD,cAAC,EAAD,CAAO1K,KAAMA,EAAMgG,QAAS,SAAC2E,GAAkBnB,EAAUmB,IAAQ1E,WAAYsD,EAAQE,YAAa,SAAC1K,GAAmB0K,EAAY1K,IAAS6B,UAAW8I,EAAU1G,EAAOf,MAAM,KAAK,IAAKnB,KAAMkC,EAAOf,MAAM,KAAK,GAAIlB,MAAOA,oB,qBC7DlS6J,MAvBf,WACE,MAA0B5J,mBAAS,SAAnC,mBAAOD,EAAP,KAAcsI,EAAd,KAaA,OAXA1H,qBAAU,WACM,UAAVZ,GACF8J,SAASC,KAAKC,UAAUC,OAAO,QAC/BH,SAASC,KAAKC,UAAU/I,IAAI,WAE5B6I,SAASC,KAAKC,UAAUC,OAAO,SAC/BH,SAASC,KAAKC,UAAU/I,IAAI,WAE7B,CAACjB,IAIF,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOkK,OAAK,EAACC,KAAK,IAAI5M,OAAQ,SAAC6M,GAAD,OAAS,cAAC,EAAD,CAAU9B,SAAU,SAACgB,GAAmBhB,EAASgB,EAAW,OAAS,UAAYtJ,MAAOA,Y,OCpBvIqK,IAAS9M,OACP,cAAC,IAAM+M,WAAP,UACI,cAAC,EAAD,MAEJR,SAASS,eAAe,W","file":"static/js/main.54db9933.chunk.js","sourcesContent":["import React from 'react';\nimport { Tag , Tooltip} from 'antd';\n\nfunction truncateString(string: string, limit: number) {\n    if (string.length > limit) {\n        return string.substring(0, limit) + \"...\"\n    } else {\n        return string\n    }\n}\n\n\nexport const columns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a>{text}</a>,\n    },\n    {\n        title: 'Duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Entry Type',\n        dataIndex: 'entryType',\n        key: 'entryType',\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'metadata',\n        key: 'metadata',\n        render: (metadata: any) => {\n            return (<div><p>{metadata && metadata.name ? <Tooltip placement=\"bottom\" title={metadata.name}><span style={{cursor:'pointer'}}>{truncateString(metadata.name, 60)}</span></Tooltip> : 'None'}</p></div>)\n        }\n    }\n];\n\nexport const synoposisColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    }\n]\n\nexport const launchpadColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    }\n]","import axios from 'axios'\n\nvar instance = axios.create({\n    baseURL : \"http://13.232.71.146:8118\"\n})\n\nexport default instance","export const data: { [key: string]: any } = {\n  \"Modern Marketing\": [\n    \"Workflow Engine\",\n    \"Production Dashboards\",\n    \"Campaigns\",\n    \"Request Forms\",\n    \"Digital Asset Management\",\n  ],\n  \"Modern Research\": [\n    \"Listening Smart Alerts Dashboard\",\n    \"Listening Dashboards\",\n    \"Media Insights\",\n    \"Smart Theme Explorer\",\n    \"Visual Insights\",\n  ],\n  \"Modern Care\": [\n    \"Care Reporting\",\n    \"Smart Responses\",\n    \"Agent Console\",\n    \"Assignment Engine\",\n    \"Proactive Prompts\",\n  ],\n  \"Modern Engagement\": [\n    \"Reporting\",\n    \"Editorial Calendar\",\n    \"Engagement Dashboards\",\n    \"Manage Pipelines\",\n  ],\n};\n\nexport const color: Array<string> = [\n  '#2069e0',\n  '#f4d47c',\n  '#082c6c',\n  '#878683',\n  '#bebebe',\n  '#444444'\n  \n];\n","import React, { FC, useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Select } from 'antd';\nimport axios from '../../../axios';\nimport { data as IncludeList, color as colorlist } from './chartInclude';\nimport moment from 'moment'\n\nconst { Option } = Select;\n\nconst randomBetween = (min : number, max:number) => min + Math.floor(Math.random() * (max - min + 1));\n\nconst Chart: FC<{ input: Array<any>, fileDates: Array<any>, setCloudName(name: string): void, file: string , theme : string }> = ({ input, fileDates, setCloudName, file , theme}) => {\n    const [color] = useState<Array<string>>(colorlist);\n    const [labels, setLabels] = useState<Array<string>>([]);\n    const [selectData, setSelectData] = useState<Array<string>>([]);\n    const [dataset, setDataset] = useState<Array<string>>([]);\n    // const [longtaskDatasetState,setLongtaskDataset] = useState<Array<string>>([]);\n    const [selected, setSelected] = useState<string>('');\n    const [selectedDate, setSelectedDate] = useState<string>('');\n\n    function handleRunChange(value: string) {\n        setSelected(value);\n        setCloudName(value);\n    }\n\n    useEffect(() => {\n        if (input) {\n\n            let s = new Set<string>();\n\n            input.forEach(entry => {\n                s.add(entry.name.org.split('-')[0].trim());\n            })\n\n            let cloud  = Array.from(s)[0];\n            setCloudName(cloud)\n            setSelected(cloud);\n            setSelectData(Array.from(s));\n            setSelectedDate(fileDates[0]);\n        }\n    }, [input])\n\n    function generateDataset(data: any) {\n        let dates = Object.keys(data);\n        let dataset: Array<any> = [];\n        let labels: Array<any> = [];\n        // let longtaskDataset: Array<any> =[];\n        for (let i in dates) {\n            let date: { [key: string]: any } = data[dates[i]];\n            let modules = Object.keys(date);\n            modules = modules.filter((name) => { return name.includes(selected) });\n            for(let module of modules) {\n                let label = module.split('-')[1].trim();\n                let time = date[module].time;\n                // let longtask = date[module].longtask;\n                let index = dataset.findIndex((el) => { return el.label === label });\n                if (Object.keys(IncludeList).includes(selected) && !IncludeList[selected].includes(label)){ continue; }\n                else {\n                    if (index === -1) {\n                        const r = randomBetween(125, 255);\n                        const g = randomBetween(125, 255);\n                        const b = randomBetween(125, 255);\n                        let bgColor = `rgba(${r},${g},${b},1)`;\n                        console.log(bgColor);\n                        let obj = {\n                            label, data: [time],\n                            borderColor: bgColor,\n                            backgroundColor: bgColor,\n                            tension: 0.4\n                        };\n                        // let longtaskObj = {\n                        //     label, data: [longtask], borderColor: bgColor,\n                        //     backgroundColor:bgColor,\n                        //     pointBackgroundColor: bgColor,\n                        //     pointBorderColor: bgColor,\n                        //     pointRadius: 5,\n                        //     borderWidth: 2,\n                        //     tension: 0\n                        // }\n                        dataset.push(obj)\n                        // longtaskDataset.push(longtaskObj);\n                    } else {\n                        dataset[index]['data'].push(time);\n                        // longtaskDataset[index]['data'].push(longtask);\n                    }\n                }\n            }\n            let formatDate = dates[i].split('-')\n            labels.push(moment(`${formatDate[1]}/${formatDate[0]}/${formatDate[2]}`).format('Do MMMM'));\n        }\n        if (dataset.length > 0 && dataset.length <= 5) {\n            setDataset(dataset);\n            setLabels(labels);\n        }\n        // setLongtaskDataset(longtaskDataset);\n    }\n\n    useEffect(() => {\n        axios.get(`/chart/${file}`).then(({ data }) => {\n            if (data) {\n                generateDataset(data);\n            }\n        }).catch();\n    }, [file, selected]);\n\n    const chartData = {\n        labels,\n        datasets: dataset\n    };\n\n    // const longtaskChartData = {\n    //     labels,\n    //     datasets:longtaskDatasetState\n    // }\n\n    const options = {\n        scales: {\n            x: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Date',\n                    color: theme !== 'light' ? 'white' : '#565656'\n                },\n                grid:{\n                    display:false,\n                    color: theme === 'light' ? '#c7c7c7' :'#8585854a'\n                },\n                ticks:{\n                    color: theme !== 'light' ? 'white' : '#565656'\n                }\n            },\n            y: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Time to Interactive (ms)',\n                    color:theme !== 'light' ? 'white' : '#565656'\n                },\n                grid:{\n                    color: theme === 'light' ? '#c7c7c7' :'#8585854a'\n                },\n                ticks:{\n                    color: theme !== 'light' ? 'white' : '#565656'\n                }\n            }\n        },\n        plugins:{\n            title: {\n                display: true,\n                text: selected,\n                color:theme !== 'light' ? 'white' : '#565656'\n            },\n            legend: {\n                display: true,\n                labels: {\n                    color:  theme !== 'light' ? 'white' : '#565656'\n                }\n            }\n        }\n    };\n\n    return (\n        <div style={{ marginBottom: '10px' }}>\n            {selectData && selectData.length > 1 && <Select placeholder=\"Select Filter\" value={selected} style={{ width: '300px', marginBottom: '10px' }} onChange={handleRunChange}>\n                {\n                    selectData.map((entity) => {\n                        return <Option value={entity}>{entity}</Option>\n                    })\n                }\n            </Select>}\n            {/* <Select placeholder=\"Select Filter\" value={selectedDate} style={{ width: '300px' }} onChange={handleDateChange}>\n                {\n                    fileDates.map(date => {\n                        return <Option key={`${file}-${date}`} value={`${date}`} >{date}</Option>\n                    })\n                }\n            </Select> */}\n            {/* <h5>Time to intercative </h5> */}\n            <div  style={theme === 'light' ? { backgroundColor: 'white', boxSizing: 'border-box', padding: '10px' } : { backgroundColor: 'rgb(21 21 21)', boxSizing: 'border-box', padding: '10px' , border:'1px solid hsl(0 0% 44% / 1)'} }>\n               {<Line data={chartData} options={options} type=\"Line\" id=\"canvas\" /> }\n            </div>\n            {/* <h5>long Task</h5>\n           <Line data={longtaskChartData} options={options} type=\"Line\" /> */}\n        </div>\n    );\n}\n\n\nexport default Chart","import React, { FC, Fragment, useEffect, useState } from 'react'\nimport { columns, synoposisColumns , launchpadColumns } from './data'\nimport { Table } from 'antd';\nimport { durationsType } from '../index';\nimport { Tabs } from 'antd';\nimport Chart from './chart';\nimport {data as includeList} from './chartInclude';\n\nconst { TabPane } = Tabs;\n\nconst whiteListResources = [/app.getsentry.com/, /dap.sprinklr.com/, /user\\/session\\/details/, /.js/];\n\nconst TableComponent: FC<{ data: { data: Array<any>, durations: durationsType }, setRuns(num: string): void, currNumRun: string | null, setFileName(name: string): void, fileDates: Array<string>, file: string , theme : string}> = ({ data: { data, durations }, setRuns, currNumRun, fileDates, file, theme}) => {\n    const [output, setOutput] = useState<Array<any>>([]);\n    const [synopsis, setSynopsis] = useState<Array<any>>([]);\n    const [selected , setSelected] = useState<string>('');\n\n    useEffect(() => {\n        let temp: Array<any> = []\n        if (data && data.length > 0) {\n            temp = data.map((datapoint, index) => {\n                let key = Object.keys(datapoint)[0];\n                let arr = datapoint[key];\n                let out = [];\n                if (arr && arr.length > 0) {\n                    for (let i of arr) {\n                        let isExcluded = whiteListResources.some((rx) =>\n                            rx.test(i.name)\n                        );\n                        if (!isExcluded) {\n                            out.push({\n                                key: `${index}-${i.startTime}`,\n                                name: key,\n                                entryType: i.entryType,\n                                duration: Math.ceil(i.duration),\n                                priority: Math.ceil(i.duration),\n                                metadata: {\n                                    name: i.entryType === 'resource' ? i.name.replace('https://champagne.sprinklr.com','') : 'None',\n                                    size: i.entryType === 'resource' ? i.transferSize : 0\n                                },\n                                interaction: 'Click'\n                            })\n                        } else if (out.length === 0) {\n                            out.push({\n                                key: `${index}-${Math.random()}`,\n                                name: key,\n                            })\n                        }\n                    }\n                } else {\n                    out.push({\n                        key: `${index}-${Math.random()}`,\n                        name: key,\n                    })\n                }\n                return out;\n            })\n        }\n        setOutput(temp);\n    }, [data])\n\n    useEffect(() => {\n        if (!durations || Object.keys(durations).length === 0) return;\n        let ans: Array<any> = [];\n        const sorter = (a: any, b: any) => {\n            return a.time < b.time ? -1 : 1;\n        };\n        for (let key in durations) {\n            let data = output.filter((arr) => {\n                return arr[0].name === key \n            })[0];\n            let longtask = 0;\n            let resource: Array<any> = [];\n            if (data) {\n                data.forEach((data: any) => {\n                    if (data.entryType === 'longtask') {\n                        longtask = Math.max(longtask, data.duration)\n                    }\n                    if (data.entryType === 'resource') {\n                        resource.push({ name: data.metadata.name, time: data.metadata.time });\n                    }\n                })\n                resource.sort(sorter)\n                let slicedResources = resource.slice(0, 5);\n                let final = slicedResources.reduce((prev, curr) => { prev.push(curr.name); return prev }, new Array<string>());\n                resource = final;\n            }\n            ans.push({\n                name: { org: key, format: `${key.split('-')[1].trim()}` },\n                longtask: longtask,\n                resource: resource,\n                duration: durations[key]['time'],\n                interaction: durations[key]['interaction'],\n                actionName: durations[key]['actionName']\n            })\n            if (!currNumRun) setRuns(durations[key]['numRun']);\n        }\n        setSynopsis(ans);\n    }, [output, durations]);\n\n    function synopsisFilter(data: Array<any>): Array<any> {\n        return  selected!== undefined ? data.filter(el => {\n           return Object.keys(includeList).includes(selected) &&  !includeList[selected].includes(el.name.format) ? false : el.name.org.split('-')[0].trim() === selected; \n        }) : [];\n    }\n\n\n    return (\n        <div className=\"card-container\">\n            <Chart input={synopsis} fileDates={fileDates} setCloudName={(name:string)=>{setSelected(name)}} file={file} theme={theme} />\n            <Tabs type=\"card\">\n                <TabPane tab=\"Summary\" key=\"1\">\n                    <div>\n                        <Table columns={ file.includes('Launchpad')? launchpadColumns :synoposisColumns} dataSource={synopsisFilter(synopsis)} pagination={false} />\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Detail Report\" key=\"2\">\n                    {\n                     output && output.length > 0 ? output.map((data: Array<{ name: string }>) => {\n                            return (\n                                <Fragment key={`${data[0].name}`}>\n                                    <h3 id={`${data[0].name}`}>Duration: {durations && Object.keys(durations).length > 0 && durations[data[0].name]['time']}<small>ms</small></h3>\n                                    <Table columns={columns} dataSource={data} />\n                                </Fragment>)\n                        }) : null\n                    }\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n}\n\n\nexport default TableComponent","import React, { Fragment, useState, useEffect, FC } from 'react'\nimport { Select } from 'antd';\nimport { Form, Button } from 'antd';\nimport axios from '../../../axios';\nimport {durationsType} from '../index'\ntype LayoutType = Parameters<typeof Form>[0]['layout'];\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Filter: FC<{ updateTableData(data: { data: Array<any>, durations: durationsType }): void, setModule(name: string): void , filename:string}> = ({ updateTableData, setModule , filename}) => {\n    const [form] = Form.useForm();\n    const [formLayout] = useState<LayoutType>('inline');\n    const [run, setRun] = useState<string>('1');\n    const [entryType, setEntry] = useState<Array<string>>(['longtask', 'resource']);\n\n    function handleSubmit() {\n        updateTableData({ data: [], durations: {} });\n        if (filename.length > 0) {\n            axios.post('/data', {\n                run: run,\n                entryType: JSON.stringify(entryType),\n                filename: filename\n            }).then(({ data }) => {\n                updateTableData(data);\n                setModule(filename);\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    useEffect(()=>{\n        handleSubmit();\n    },[filename])\n\n    // function handleRunChange(value: string) {\n    //     setRun(value);\n    // }\n\n    // function handleEntryChange(value: Array<string>) {\n    //     setEntry(value)\n    // }\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: { span: 4 },\n                wrapperCol: { span: 14 },\n            }\n            : null;\n\n    return (\n        <Fragment>\n            {/* <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                initialValues={{ layout: formLayout }}\n            > */}\n                {/* <Form.Item label=\"Run\" name=\"run\">\n                    <Select defaultValue=\"1\" style={{ width: 120 }} onChange={handleRunChange}>\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Entry Type\" name=\"entryType\">\n                    <Select defaultValue={['longtask', 'resource']} style={{ width: '300px' }} onChange={handleEntryChange} mode=\"multiple\" size='large'>\n                        <Option value=\"longtask\">Long Tasks</Option>\n                        <Option value=\"resource\">Resources</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form> */}\n        </Fragment>\n    )\n}\n\n\nexport default Filter","export const desc : { [key: string]: any } = {\n    \"Launchpad\":\"Reported time to interactive for each module of our products. Logged  time taken , longtasks , resources between automated click and the instance the loader disappear.\",\n    \"Agent Console\":\"Reported performance metrics for agent console by simulating user actions on reply box , assign box and macro box.\",\n    \"custom\":\"Designed a custom URL crawler to measure interactive slowness of targeted selector.\",\n    \"Quick Publish\":\"Reported time to interactive , long tasks and resources for Quick publisher module.\"\n}","import React, { useState, useEffect, FC } from 'react'\nimport { Layout, Menu } from 'antd';\nimport { FileDoneOutlined } from '@ant-design/icons';\nimport Table from './table/index'\nimport Filter from './filters';\nimport axios from '../../axios';\nimport { desc } from './description';\nimport { Switch } from 'antd';\n\nconst { Header, Content, Sider } = Layout;\n// const { SubMenu } = Menu;\n\nexport type durationsType = { [key: string]: { time: string, actionName: string, interaction: string, numRun: string } }\n\nfunction formatFileNames(files: Array<string>) {\n    let output: { [key: string]: any } = {};\n    files.forEach(file => {\n        let arr = file.split('(');\n        if (output.hasOwnProperty(arr[0])) {\n            let date = arr[1].split(')')[0];\n            output[arr[0]].push(date);\n        } else {\n            let date = arr[1].split(')')[0];\n            output[arr[0]] = [date];\n        }\n    })\n    return output;\n}\n\nconst LayoutComponent: FC<{ setTheme(checked: boolean): void , theme:string }> = ({ setTheme , theme }) => {\n    const [data, setData] = useState<{ data: Array<any>, durations: durationsType }>({ data: [], durations: {} });\n    const [module, setModule] = useState<string | null>(null);\n    const [numRun, setNumRun] = useState<string | null>(null);\n    const [filename, setFileName] = useState<string>('');\n    const [fileNames, setFileNames] = useState<{ [key: string]: Array<string> }>({});\n\n    useEffect(() => {\n        axios.get('/fileNames').then(({ data }) => {\n            if (data) {\n                setFileNames(formatFileNames(data));\n                setFileName(data[0]);\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n    function onChange(checked: boolean) {\n        setTheme(checked);\n    }\n\n    return (\n        <Layout>\n            <Header className=\"header\" style={{ position: 'sticky', zIndex: 1000, top: '0px' }}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\">\n                    <Menu.Item key=\"1\" style={theme==='dark'?{color:'white'}:{}}>Measurement of Interactive Slowness</Menu.Item>\n                    <div className=\"logo\" style={{position:'absolute', right:'100px'}}>Dark Mode  <Switch onChange={onChange} /></div> \n                </Menu>         \n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            style={{ height: '100%' }}\n                        >\n                            {\n                                Object.keys(fileNames).map((file: string) => {\n                                    return (\n                                        <Menu.Item key={`${file}`} onClick={() => {\n                                            setModule(`${file}(${fileNames[file][0]})`);\n                                            setFileName(`${file}(${fileNames[file][0]}).json`);\n                                        }} style={{ textTransform: 'capitalize' }}>{file.replaceAll('-', ' ')}</Menu.Item>\n                                    )\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px' }}>\n                                <Filter updateTableData={(data: { data: Array<any>, durations: durationsType }) => { setData(data) }} setModule={(name: string) => setModule(name)} filename={filename} />\n                                <h3>Module Name : {module && module.split('(')[0].replaceAll('-', ' ')}</h3>\n                                {/* <h3>#Run :{numRun} </h3>\n                                <h3>Date: {module && module.split('(')[1].split(')')[0]}</h3> */}\n                                <h4>Description : {module && desc[module.split('(')[0].replaceAll('-', ' ')]}</h4>\n                            </Content>\n                        </Layout>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            {\n                                module &&\n                                <Content style={{ padding: '0 24px', minHeight: 280 }}><Table data={data} setRuns={(num: string) => { setNumRun(num) }} currNumRun={numRun} setFileName={(name: string) => { setFileName(name) }} fileDates={fileNames[module.split('(')[0]]} file={module.split('(')[0]} theme={theme}/></Content>\n                            }\n                        </Layout></Content>\n                </Layout>\n            </Content>\n        </Layout>)\n}\n\n\nexport default LayoutComponent","import React ,{useState , useEffect}from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport { Button } from 'antd';\nimport Reporter from '../reporter/index'\nimport './theme.light.less';\nimport './theme.dark.less';\nimport \"../../app.css\"\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    if (theme === 'light') {\n      document.body.classList.remove('dark');\n      document.body.classList.add('light');\n    } else {\n      document.body.classList.remove('light');\n      document.body.classList.add('dark');\n    }\n  }, [theme])\n\n\n  return (\n    <div>\n      <HashRouter>\n        <Route exact path=\"/\" render={(props)=><Reporter setTheme={(checked:boolean)=>{setTheme(checked  ? 'dark' : 'light');}} theme={theme}/>} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}