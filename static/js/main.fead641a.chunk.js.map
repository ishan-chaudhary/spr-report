{"version":3,"sources":["components/reporter/table/data.tsx","components/reporter/table/index.tsx","components/reporter/filters/index.tsx","components/reporter/index.tsx","components/app/App.tsx","index.tsx"],"names":["truncateString","string","limit","length","substring","columns","title","dataIndex","key","render","text","sorter","compare","a","b","duration","multiple","metadata","console","log","size","name","placement","style","cursor","color","synoposisColumns","href","org","format","longtask","resources","map","resource","TabPane","Tabs","whiteListResources","TableComponent","data","durations","setRuns","currNumRun","useState","output","setOutput","synopsis","setSynopsis","useEffect","temp","datapoint","index","Object","keys","arr","out","i","some","rx","test","push","Math","random","startTime","entryType","ceil","priority","transferSize","interaction","ans","time","filter","forEach","max","sort","final","slice","reduce","prev","curr","Array","actionName","className","type","tab","dataSource","pagination","id","Option","Select","tailLayout","wrapperCol","offset","span","Filter","updateTableData","setModule","filename","Form","useForm","form","formLayout","run","setRun","setEntry","handleSubmit","axios","post","JSON","stringify","then","catch","err","formItemLayout","labelCol","layout","initialValues","Item","label","defaultValue","width","onChange","value","mode","htmlType","onClick","Header","Layout","Content","Sider","SubMenu","Menu","LayoutComponent","setData","module","numRun","setNumRun","setFileName","fileNames","setFileNames","get","files","file","split","hasOwnProperty","date","formatFileNames","theme","padding","height","icon","FileDoneOutlined","minHeight","num","App","exact","path","component","Reporter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fead641a.chunk.js","sourcesContent":["import React from 'react';\nimport { Tag , Tooltip} from 'antd';\n\nfunction truncateString(string: string, limit: number) {\n    if (string.length > limit) {\n        return string.substring(0, limit) + \"...\"\n    } else {\n        return string\n    }\n}\n\nexport const columns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a>{text}</a>,\n    },\n    {\n        title: 'Duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Entry Type',\n        dataIndex: 'entryType',\n        key: 'entryType',\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Metadata',\n        dataIndex: 'metadata',\n        key: 'metadata',\n        render: (metadata: any) => {\n            console.log(metadata.size)\n            return (<div><p>{metadata && metadata.name ? <Tooltip placement=\"bottom\" title={metadata.name}><span style={{cursor:'pointer'}}>{truncateString(metadata.name, 60)}</span></Tooltip> : 'None'}</p></div>)\n        }\n    },\n    {\n        title: 'Priority',\n        key: 'priority',\n        dataIndex: 'priority',\n        render: (duration: any) => (\n            <>\n                {\n                    duration > 150 ? <Tag color={'red'} key={'high'}>\n                        High\n                    </Tag> : duration > 100 ? <Tag color={'yellow'} key={'high'}>\n                        Medium\n                    </Tag> : <Tag color={'green'} key={'high'}>\n                        Low\n                    </Tag>}\n            </>\n        ),\n    }\n];\n\nexport const synoposisColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Action Name',\n        key: 'actionName',\n        dataIndex: 'actionName',\n    }\n]","import React, { FC, Fragment, useEffect, useState } from 'react'\nimport { columns, synoposisColumns } from './data'\nimport { Table } from 'antd';\nimport { durationsType } from '../index';\nimport { Tabs } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst whiteListResources = [/app.getsentry.com/, /dap.sprinklr.com/, /user\\/session\\/details/, /.js/];\n\nconst TableComponent: FC<{ data: { data: Array<any>, durations: durationsType }, setRuns(num: string): void, currNumRun: string | null }> = ({ data: { data, durations }, setRuns, currNumRun }) => {\n    const [output, setOutput] = useState<Array<any>>([]);\n    const [synopsis, setSynopsis] = useState<Array<any>>([]);\n\n    useEffect(() => {\n        let temp: Array<any> = []\n        if (data && data.length > 0) {\n            temp = data.map((datapoint, index) => {\n                let key = Object.keys(datapoint)[0];\n                let arr = datapoint[key];\n                let out = [];\n                if (arr && arr.length > 0) {\n                    for (let i of arr) {\n                        let isExcluded = whiteListResources.some((rx) =>\n                            rx.test(i.name)\n                        );\n                        if (!isExcluded) {\n                            out.push({\n                                key: `${index}-${i.startTime}`,\n                                name: key,\n                                entryType: i.entryType,\n                                duration: Math.ceil(i.duration),\n                                priority: Math.ceil(i.duration),\n                                metadata: {\n                                    name: i.entryType === 'resource' ? i.name : 'None',\n                                    size: i.entryType === 'resource' ? i.transferSize : 0\n                                },\n                                interaction: 'Click'\n                            })\n                        } else if (out.length === 0) {\n                            out.push({\n                                key: `${index}-${Math.random()}`,\n                                name: key,\n                            })\n                        }\n                    }\n                } else {\n                    out.push({\n                        key: `${index}-${Math.random()}`,\n                        name: key,\n                    })\n                }\n                return out;\n            })\n        }\n        setOutput(temp);\n    }, [data])\n\n    useEffect(() => {\n        if (!durations || Object.keys(durations).length === 0) return;\n        let ans: Array<any> = [];\n        const sorter = (a: any, b: any) => {\n            return a.time < b.time ? -1 : 1;\n        };\n        for (let key in durations) {\n            let data = output.filter((arr) => {\n                return arr[0].name === key\n            })[0];\n            let longtask = 0;\n            let resource: Array<any> = [];\n            if (data) {\n                data.forEach((data: any) => {\n                    if (data.entryType === 'longtask') {\n                        longtask = Math.max(longtask, data.duration)\n                    }\n                    if (data.entryType === 'resource') {\n                        resource.push({ name: data.metadata.name, time: data.metadata.time });\n                    }\n                })\n                resource.sort(sorter)\n                let slicedResources = resource.slice(0, 5);\n                let final = slicedResources.reduce((prev, curr) => { prev.push(curr.name); return prev }, new Array<string>());\n                resource = final;\n            }\n            ans.push({\n                name: { org: key, format: `${key}` },\n                longtask: longtask,\n                resource: resource,\n                duration: durations[key]['time'],\n                interaction: durations[key]['interaction'],\n                actionName: durations[key]['actionName']\n            })\n            if (!currNumRun) setRuns(durations[key]['numRun']);\n        }\n        setSynopsis(ans);\n    }, [output, durations]);\n\n\n    return (\n        <div className=\"card-container\">\n            <Tabs type=\"card\">\n                <TabPane tab=\"Summary\" key=\"1\">\n                    <div>\n                        <Table columns={synoposisColumns} dataSource={synopsis} pagination={false} />\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Detail Report\" key=\"2\">\n                    {\n                        output && output.length > 0 ? output.map((data: Array<{ name: string }>) => {\n                            return (\n                                <Fragment key={`${data[0].name}`}>\n                                    <h3 id={`${data[0].name}`}>Duration: {durations && Object.keys(durations).length > 0 && durations[data[0].name]['time']}<small>ms</small></h3>\n                                    <Table columns={columns} dataSource={data} />\n                                </Fragment>)\n                        }) : null\n                    }\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n}\n\n\nexport default TableComponent","import React, { Fragment, useState, useEffect, FC } from 'react'\nimport { Select } from 'antd';\nimport { Form, Button } from 'antd';\nimport axios from 'axios';\nimport {durationsType} from '../index'\ntype LayoutType = Parameters<typeof Form>[0]['layout'];\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Filter: FC<{ updateTableData(data: { data: Array<any>, durations: durationsType }): void, setModule(name: string): void , filename:string}> = ({ updateTableData, setModule , filename}) => {\n    const [form] = Form.useForm();\n    const [formLayout] = useState<LayoutType>('inline');\n    const [run, setRun] = useState<string>('1');\n    const [entryType, setEntry] = useState<Array<string>>(['longtask', 'resource']);\n\n    function handleSubmit() {\n        updateTableData({data:[],durations:{}});\n        axios.post('http://13.232.71.146:8118/data', {\n            run: run,\n            entryType: JSON.stringify(entryType),\n            filename: filename\n        }).then(({ data }) => {\n            updateTableData(data);\n            setModule(filename);\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    useEffect(()=>{\n        handleSubmit();\n    },[filename])\n\n    function handleRunChange(value: string) {\n        setRun(value);\n    }\n\n    function handleEntryChange(value: Array<string>) {\n        setEntry(value)\n    }\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: { span: 4 },\n                wrapperCol: { span: 14 },\n            }\n            : null;\n\n    return (\n        <Fragment>\n            <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                initialValues={{ layout: formLayout }}\n            >\n                <Form.Item label=\"Run\" name=\"run\">\n                    <Select defaultValue=\"1\" style={{ width: 120 }} onChange={handleRunChange}>\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Entry Type\" name=\"entryType\">\n                    <Select defaultValue={['longtask', 'resource']} style={{ width: '300px' }} onChange={handleEntryChange} mode=\"multiple\" size='large'>\n                        <Option value=\"longtask\">Long Tasks</Option>\n                        <Option value=\"resource\">Resources</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Fragment>\n    )\n}\n\n\nexport default Filter","import React, { useState, useEffect, FC } from 'react'\nimport { Layout, Menu } from 'antd';\nimport { FileDoneOutlined } from '@ant-design/icons';\nimport Table from './table/index'\nimport Filter from './filters';\nimport axios from 'axios';\n\nconst { Header, Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport type durationsType = { [key: string]: { time: string, actionName: string, interaction: string, numRun: string } }\n\nfunction formatFileNames(files: Array<string>) {\n    let output: { [key: string]: any } = {};\n    files.forEach(file => {\n        let arr = file.split('(');\n        if (output.hasOwnProperty(arr[0])) {\n            let date = arr[1].split(')')[0];\n            output[arr[0]].push(date);\n        } else {\n            let date = arr[1].split(')')[0];\n            output[arr[0]] = [date];\n        }\n    })\n    return output;\n}\n\nconst LayoutComponent: FC = () => {\n    const [data, setData] = useState<{ data: Array<any>, durations: durationsType }>({ data: [], durations: {} });\n    const [module, setModule] = useState<string | null>(null);\n    const [numRun, setNumRun] = useState<string | null>(null);\n    const [filename, setFileName] = useState<string>('');\n    const [fileNames, setFileNames] = useState<{ [key: string]: Array<string> }>({});\n\n    useEffect(() => {\n        axios.get('http://13.232.71.146:8118/fileNames').then(({ data }) => {\n            if (data) {\n                setFileNames(formatFileNames(data));\n                setFileName(data[0]);\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n\n    return (\n        <Layout>\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\">\n                    <Menu.Item key=\"1\">Measurement of Interactive Slowness</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            style={{ height: '100%' }}\n                        >\n                            {\n                                Object.keys(fileNames).map((file: string) => {\n                                    return (\n                                        <SubMenu key={file} icon={<FileDoneOutlined />} title={file}>\n                                            {\n                                                fileNames[file].map(date => {\n                                                    return <Menu.Item key={`${file}-${date}`} onClick={() => {\n                                                        setFileName(`${file}(${date}).json`)\n                                                    }}>{date}</Menu.Item>\n                                                })\n                                            }\n                                        </SubMenu>\n                                    )\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px' }}>\n                                <Filter updateTableData={(data: { data: Array<any>, durations: durationsType }) => { setData(data) }} setModule={(name: string) => setModule(name)} filename={filename} />\n                                <h3>Module Name : {module && module.split('(')[0]}</h3>\n                                <h3>#Run :{numRun} </h3>\n                                <h3>Date: {module && module.split('(')[1].split(')')[0]}</h3>\n                            </Content>\n                        </Layout>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px', minHeight: 280 }}><Table data={data} setRuns={(num: string) => { setNumRun(num) }} currNumRun={numRun} /></Content>\n                        </Layout></Content>\n                </Layout>\n            </Content>\n        </Layout>)\n}\n\n\nexport default LayoutComponent","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Reporter from '../reporter/index'\nimport \"../../app.css\"\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Route exact path=\"/\" component={Reporter} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}