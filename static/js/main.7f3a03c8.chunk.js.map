{"version":3,"sources":["components/reporter/table/data.tsx","axios.ts","components/reporter/table/chartInclude.ts","components/reporter/table/chart.tsx","components/reporter/table/index.tsx","components/reporter/filters/index.tsx","components/reporter/description.ts","components/reporter/index.tsx","components/app/App.tsx","index.tsx"],"names":["truncateString","string","limit","length","substring","columns","title","dataIndex","key","render","text","sorter","compare","a","b","duration","multiple","metadata","name","placement","style","cursor","synoposisColumns","href","org","format","longtask","resources","map","resource","launchpadColumns","instance","axios","create","baseURL","data","color","Option","Select","randomBetween","min","max","Math","floor","random","Chart","input","fileDates","setCloudName","file","theme","setFileName","useState","colorlist","labels","setLabels","selectData","setSelectData","dataset","setDataset","selected","setSelected","selectedDate","setSelectedDate","useEffect","s","Set","forEach","entry","add","split","trim","cloud","Array","from","get","then","dates","Object","keys","i","date","modules","filter","includes","module","label","time","index","findIndex","el","IncludeList","r","g","bgColor","console","log","obj","borderColor","backgroundColor","push","formatDate","moment","generateDataset","catch","chartData","datasets","options","scales","x","display","grid","ticks","y","plugins","legend","tooltip","callbacks","context","parsed","marginBottom","placeholder","value","width","onChange","entity","boxSizing","padding","border","type","id","marginTop","TabPane","Tabs","whiteListResources","TableComponent","durations","setRuns","currNumRun","output","setOutput","synopsis","setSynopsis","temp","datapoint","arr","out","some","rx","test","startTime","entryType","ceil","priority","replace","size","transferSize","interaction","ans","sort","final","slice","reduce","prev","curr","actionName","className","tab","dataSource","undefined","includeList","synopsisFilter","pagination","Filter","updateTableData","setModule","filename","Form","useForm","run","post","JSON","stringify","err","desc","Header","Layout","Content","Sider","LayoutComponent","array","oldIndex","newIndex","setTheme","setData","numRun","setNumRun","fileNames","setFileNames","files","hasOwnProperty","formatFileNames","position","zIndex","top","mode","Item","right","checked","height","splice","onClick","textTransform","replaceAll","minHeight","num","App","exact","path","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f3a03c8.chunk.js","sourcesContent":["import React from 'react';\nimport { Tag , Tooltip} from 'antd';\n\nfunction truncateString(string: string, limit: number) {\n    if (string.length > limit) {\n        return string.substring(0, limit) + \"...\"\n    } else {\n        return string\n    }\n}\n\n\nexport const columns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a>{text}</a>,\n    },\n    {\n        title: 'Duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Entry Type',\n        dataIndex: 'entryType',\n        key: 'entryType',\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'metadata',\n        key: 'metadata',\n        render: (metadata: any) => {\n            return (<div><p>{metadata && metadata.name ? <Tooltip placement=\"bottom\" title={metadata.name}><span style={{cursor:'pointer'}}>{truncateString(metadata.name, 60)}</span></Tooltip> : 'None'}</p></div>)\n        }\n    }\n];\n\nexport const synoposisColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    },\n    {\n        title: 'Interaction',\n        dataIndex: 'interaction',\n        key: 'interaction',\n    }\n]\n\nexport const launchpadColumns = [\n    {\n        title: 'Module',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: any) => <a href={`#${text.org}`}>{text.format}</a>,\n    },\n    {\n        title: 'Time to Interactive',\n        dataIndex: 'duration',\n        key: 'duration',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.duration - b.duration,\n            multiple: 1,\n        }\n    },\n    {\n        title: 'Long Tasks upto',\n        dataIndex: 'longtask',\n        key: 'longtask',\n        render: (text: any) => <p>{text} <small>ms</small></p>,\n        sorter: {\n            compare: (a: any, b: any) => a.longtask - b.longtask,\n            multiple: 2,\n        }\n    },\n    {\n        title: 'Resource',\n        dataIndex: 'resource',\n        key: 'resource',\n        render: (resources: Array<any>) => {\n            return resources.map((resource) => {\n                return  <Tooltip placement=\"bottom\" title={resource} ><p style={{cursor:'pointer'}}>{truncateString(resource, 60)}</p></Tooltip>\n            })\n        }\n    }\n]","import axios from 'axios'\n\nvar instance = axios.create({\n    baseURL : \"http://13.127.244.212:8118/\"\n})\n\nexport default instance","export const data: { [key: string]: any } = {\n  \"Modern Marketing\": [\n    \"Workflow Engine\",\n    \"Production Dashboards\",\n    \"Campaigns\",\n    \"Request Forms\",\n    \"Digital Asset Management\",\n    \"Create Post\"\n  ],\n  \"Modern Research\": [\n    \"Listening Smart Alerts Dashboard\",\n    \"Listening Dashboards\",\n    \"Media Insights\",\n    \"Smart Theme Explorer\",\n    \"Visual Insights\",\n  ],\n  \"Modern Care\": [\n    \"Care Reporting\",\n    \"Smart Responses\",\n    \"Agent Console\",\n    \"Assignment Engine\",\n    \"Proactive Prompts\",\n  ],\n  \"Modern Engagement\": [\n    \"Reporting\",\n    \"Editorial Calendar\",\n    \"Engagement Dashboards\",\n    \"Manage Pipelines\",\n  ],\n};\n\nexport const color: Array<string> = [\n  '#2069e0',\n  '#f4d47c',\n  '#082c6c',\n  '#878683',\n  '#bebebe',\n  '#444444'\n  \n];\n","import React, { FC, useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Select } from 'antd';\nimport axios from '../../../axios';\nimport { data as IncludeList, color as colorlist } from './chartInclude';\nimport moment from 'moment'\n\nconst { Option } = Select;\n\nconst randomBetween = (min: number, max: number) => min + Math.floor(Math.random() * (max - min + 1));\n\nconst Chart: FC<{ input: Array<any>, fileDates: Array<any>, setFileName(name: string): void, setCloudName(name: string): void, file: string, theme: string }> = ({ input, fileDates, setCloudName, file, theme, setFileName }) => {\n    const [color] = useState<Array<string>>(colorlist);\n    const [labels, setLabels] = useState<Array<string>>([]);\n    const [selectData, setSelectData] = useState<Array<string>>([]);\n    const [dataset, setDataset] = useState<Array<string>>([]);\n    // const [longtaskDatasetState,setLongtaskDataset] = useState<Array<string>>([]);\n    const [selected, setSelected] = useState<string>('');\n    const [selectedDate, setSelectedDate] = useState<string>('');\n\n    function handleRunChange(value: string) {\n        setSelected(value);\n        setCloudName(value);\n    }\n\n    function handleDateChange(value: string) {\n        setFileName(`${file}(${value}).json`)\n        setSelectedDate(value);\n    }\n\n\n    useEffect(() => {\n        setSelectedDate(fileDates[0]);\n    }, [])\n\n    useEffect(() => {\n        if (input) {\n\n            let s = new Set<string>();\n\n            input.forEach(entry => {\n                s.add(entry.name.org.split('-')[0].trim());\n            })\n\n            let cloud = Array.from(s)[0];\n            setCloudName(cloud)\n            setSelected(cloud);\n            setSelectData(Array.from(s));\n        }\n    }, [input])\n\n    function generateDataset(data: any) {\n        let dates = Object.keys(data);\n        let dataset: Array<any> = [];\n        let labels: Array<any> = [];\n        // let longtaskDataset: Array<any> =[];\n        for (let i in dates) {\n            let date: { [key: string]: any } = data[dates[i]];\n            let modules = Object.keys(date);\n            modules = modules.filter((name) => { return name.includes(selected) });\n            for (let module of modules) {\n                let label = module.split('-')[1].trim();\n                let time = date[module].time;\n                // let longtask = date[module].longtask;\n                let index = dataset.findIndex((el) => { return el.label === label });\n                if (Object.keys(IncludeList).includes(selected) && !IncludeList[selected].includes(label)) { continue; }\n                else {\n                    if (index === -1) {\n                        const r = randomBetween(125, 255);\n                        const g = randomBetween(125, 255);\n                        const b = randomBetween(125, 255);\n                        let bgColor = `rgba(${r},${g},${b},1)`;\n                        console.log(bgColor);\n                        let obj = {\n                            label, data: [time],\n                            borderColor: bgColor,\n                            backgroundColor: bgColor\n                        };\n                        // let longtaskObj = {\n                        //     label, data: [longtask], borderColor: bgColor,\n                        //     backgroundColor:bgColor,\n                        //     pointBackgroundColor: bgColor,\n                        //     pointBorderColor: bgColor,\n                        //     pointRadius: 5,\n                        //     borderWidth: 2,\n                        //     tension: 0\n                        // }\n                        dataset.push(obj)\n                        // longtaskDataset.push(longtaskObj);\n                    } else {\n                        dataset[index]['data'].push(time);\n                        // longtaskDataset[index]['data'].push(longtask);\n                    }\n                }\n            }\n            let formatDate = dates[i].split('-')\n            labels.push(moment(`${formatDate[1]}/${formatDate[0]}/${formatDate[2]}`).format('Do MMMM'));\n        }\n        if (dataset.length > 0 && dataset.length <=7) {\n            setDataset(dataset);\n            setLabels(labels);\n        }\n        // setLongtaskDataset(longtaskDataset);\n    }\n\n    useEffect(() => {\n        axios.get(`/chart/${file}`).then(({ data }) => {\n            if (data) {\n                generateDataset(data);\n            }\n        }).catch();\n    }, [file, selected]);\n\n    const chartData = {\n        labels,\n        datasets: dataset\n    };\n\n    // const longtaskChartData = {\n    //     labels,\n    //     datasets:longtaskDatasetState\n    // }\n\n    const options = {\n        scales: {\n            x: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Date',\n                    color: theme !== 'light' ? 'white' : '#565656'\n                },\n                grid: {\n                    display: false,\n                    color: theme === 'light' ? '#c7c7c7' : '#8585854a'\n                },\n                ticks: {\n                    color: theme !== 'light' ? 'white' : '#565656'\n                }\n            },\n            y: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Time to Interactive (ms)',\n                    color: theme !== 'light' ? 'white' : '#565656'\n                },\n                grid: {\n                    color: theme === 'light' ? '#c7c7c7' : '#8585854a'\n                },\n                ticks: {\n                    color: theme !== 'light' ? 'white' : '#565656'\n                }\n            }\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: selected,\n                color: theme !== 'light' ? 'white' : '#565656'\n            },\n            legend: {\n                display: true,\n                labels: {\n                    color: theme !== 'light' ? 'white' : '#565656'\n                }\n            },\n            tooltip: {\n                callbacks: {\n                    label: function(context:any) {\n                        var label = context.dataset.label || '';\n\n                        if (context.parsed.y !== null) {\n                            label += \" : \" + context.parsed.y + \" ms\";\n                        }\n                        return label;\n                    }\n                }\n            }\n        }\n    };\n\n    return (\n        <div style={{ marginBottom: '10px' }}>\n            {selectData && selectData.length > 1 && <Select placeholder=\"Select Filter\" value={selected} style={{ width: '300px', marginBottom: '10px' }} onChange={handleRunChange}>\n                {\n                    selectData.map((entity) => {\n                        return <Option value={entity}>{entity}</Option>\n                    })\n                }\n            </Select>}\n            {/* <h5>Time to intercative </h5> */}\n            <div style={theme === 'light' ? { backgroundColor: 'white', boxSizing: 'border-box', padding: '10px' } : { backgroundColor: 'rgb(21 21 21)', boxSizing: 'border-box', padding: '10px', border: '1px solid hsl(0 0% 44% / 1)' }}>\n                {<Line data={chartData} options={options} type=\"Line\" id=\"canvas\" />}\n            </div>\n            {/* <h5>long Task</h5>\n           <Line data={longtaskChartData} options={options} type=\"Line\" /> */}\n            <div style={{ marginTop: '20px' }}>\n                <Select placeholder=\"Select Filter\" value={selectedDate} style={{ width: '300px' }} onChange={handleDateChange}>\n                    {\n                        fileDates.map(date => {\n                            return <Option key={`${file}-${date}`} value={`${date}`} >{date}</Option>\n                        })\n                    }\n                </Select>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Chart","import React, { FC, Fragment, useEffect, useState } from 'react'\nimport { columns, synoposisColumns, launchpadColumns } from './data'\nimport { Table } from 'antd';\nimport { durationsType } from '../index';\nimport { Tabs } from 'antd';\nimport Chart from './chart';\nimport { data as includeList } from './chartInclude';\n\nconst { TabPane } = Tabs;\n\nconst whiteListResources = [/app.getsentry.com/, /dap.sprinklr.com/, /user\\/session\\/details/, /.js/, /scontent-iad3-1/];\n\nconst TableComponent: FC<{ data: { data: Array<any>, durations: durationsType }, setRuns(num: string): void, currNumRun: string | null, setFileName(name: string): void, fileDates: Array<string>, file: string, theme: string }> = ({ data: { data, durations }, setRuns, currNumRun, fileDates, file, theme, setFileName }) => {\n    const [output, setOutput] = useState<Array<any>>([]);\n    const [synopsis, setSynopsis] = useState<Array<any>>([]);\n    const [selected, setSelected] = useState<string>('');\n\n    useEffect(() => {\n        let temp: Array<any> = []\n        if (data && data.length > 0) {\n            temp = data.map((datapoint, index) => {\n                let key = Object.keys(datapoint)[0];\n                let arr = datapoint[key];\n                let out = [];\n                if (arr && arr.length > 0) {\n                    for (let i of arr) {\n                        let isExcluded = whiteListResources.some((rx) =>\n                            rx.test(i.name)\n                        );\n                        if (!isExcluded) {\n                            out.push({\n                                key: `${index}-${i.startTime}`,\n                                name: key,\n                                entryType: i.entryType,\n                                duration: Math.ceil(i.duration),\n                                priority: Math.ceil(i.duration),\n                                metadata: {\n                                    name: i.entryType === 'resource' ? i.name.replace('https://champagne.sprinklr.com', '') : 'None',\n                                    size: i.entryType === 'resource' ? i.transferSize : 0\n                                },\n                                interaction: 'Click'\n                            })\n                        } else if (out.length === 0) {\n                            out.push({\n                                key: `${index}-${Math.random()}`,\n                                name: key,\n                            })\n                        }\n                    }\n                } else {\n                    out.push({\n                        key: `${index}-${Math.random()}`,\n                        name: key,\n                    })\n                }\n                return out;\n            })\n        }\n        setOutput(temp);\n    }, [data])\n\n    useEffect(() => {\n        if (!durations || Object.keys(durations).length === 0) return;\n        let ans: Array<any> = [];\n        const sorter = (a: any, b: any) => {\n            return a.time < b.time ? -1 : 1;\n        };\n        for (let key in durations) {\n            let data = output.filter((arr) => {\n                return arr[0].name === key\n            })[0];\n            let longtask = 0;\n            let resource: Array<any> = [];\n            if (data) {\n                data.forEach((data: any) => {\n                    if (data.entryType === 'longtask') {\n                        longtask = Math.max(longtask, data.duration)\n                    }\n                    if (data.entryType === 'resource') {\n                        resource.push({ name: data.metadata.name, time: data.metadata.time });\n                    }\n                })\n                resource.sort(sorter)\n                let slicedResources = resource.slice(0, 5);\n                let final = slicedResources.reduce((prev, curr) => { prev.push(curr.name); return prev }, new Array<string>());\n                resource = final;\n            }\n            ans.push({\n                name: { org: key, format: `${key.split('-')[1].trim()}` },\n                longtask: longtask,\n                resource: resource,\n                duration: durations[key]['time'],\n                interaction: durations[key]['interaction'],\n                actionName: durations[key]['actionName']\n            })\n            if (!currNumRun) setRuns(durations[key]['numRun']);\n        }\n        setSynopsis(ans);\n    }, [output, durations]);\n\n    function synopsisFilter(data: Array<any>): Array<any> {\n        return selected !== undefined ? data.filter(el => {\n            return Object.keys(includeList).includes(selected) && !includeList[selected].includes(el.name.format) ? false : el.name.org.split('-')[0].trim() === selected;\n        }) : [];\n    }\n\n\n    return (\n        <div className=\"card-container\">\n            <Chart input={synopsis} fileDates={fileDates} setCloudName={(name: string) => { setSelected(name) }} setFileName={setFileName} file={file} theme={theme} />\n            <Tabs type=\"card\">\n                <TabPane tab=\"Summary\" key=\"1\">\n                    <div>\n                        <Table columns={file.includes('Launchpad') ? launchpadColumns : synoposisColumns} dataSource={synopsisFilter(synopsis)} pagination={false} />\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Detail Report\" key=\"2\">\n                    {\n                        output && output.length > 0 ? output.map((data: Array<{ name: string }>) => {\n                            return (\n                                <Fragment key={`${data[0].name}`}>\n                                    <h3 id={`${data[0].name}`}>Duration: {durations && Object.keys(durations).length > 0 && durations[data[0].name]['time']}<small>ms</small></h3>\n                                    <Table columns={columns} dataSource={data} />\n                                </Fragment>)\n                        }) : null\n                    }\n                </TabPane>\n            </Tabs>\n        </div>\n    );\n}\n\n\nexport default TableComponent","import React, { Fragment, useState, useEffect, FC } from 'react'\nimport { Select } from 'antd';\nimport { Form, Button } from 'antd';\nimport axios from '../../../axios';\nimport {durationsType} from '../index'\ntype LayoutType = Parameters<typeof Form>[0]['layout'];\n\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Filter: FC<{ updateTableData(data: { data: Array<any>, durations: durationsType }): void, setModule(name: string): void , filename:string}> = ({ updateTableData, setModule , filename}) => {\n    const [form] = Form.useForm();\n    const [formLayout] = useState<LayoutType>('inline');\n    const [run, setRun] = useState<string>('1');\n    const [entryType, setEntry] = useState<Array<string>>(['longtask', 'resource']);\n\n    function handleSubmit() {\n        updateTableData({ data: [], durations: {} });\n        if (filename.length > 0) {\n            axios.post('/data', {\n                run: run,\n                entryType: JSON.stringify(entryType),\n                filename: filename\n            }).then(({ data }) => {\n                updateTableData(data);\n                setModule(filename);\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    useEffect(()=>{\n        handleSubmit();\n    },[filename])\n\n    // function handleRunChange(value: string) {\n    //     setRun(value);\n    // }\n\n    // function handleEntryChange(value: Array<string>) {\n    //     setEntry(value)\n    // }\n\n    const formItemLayout =\n        formLayout === 'horizontal'\n            ? {\n                labelCol: { span: 4 },\n                wrapperCol: { span: 14 },\n            }\n            : null;\n\n    return (\n        <Fragment>\n            {/* <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                initialValues={{ layout: formLayout }}\n            > */}\n                {/* <Form.Item label=\"Run\" name=\"run\">\n                    <Select defaultValue=\"1\" style={{ width: 120 }} onChange={handleRunChange}>\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Entry Type\" name=\"entryType\">\n                    <Select defaultValue={['longtask', 'resource']} style={{ width: '300px' }} onChange={handleEntryChange} mode=\"multiple\" size='large'>\n                        <Option value=\"longtask\">Long Tasks</Option>\n                        <Option value=\"resource\">Resources</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form> */}\n        </Fragment>\n    )\n}\n\n\nexport default Filter","export const desc : { [key: string]: any } = {\n    \"Launchpad\":\"Reported time to interactive for each cloud of our products. Logged  time taken , longtasks , resources between automated click and the instance the loader disappear.\",\n    \"Agent Console\":\"Reported performance metrics for agent console by simulating user actions on reply box , assign box and macro box.\",\n    \"custom\":\"Designed a custom URL crawler to measure interactive slowness of targeted selector.\",\n    \"Quick Publish\":\"Reported time to interactive , long tasks and resources for Quick Publish module.\"\n}","import React, { useState, useEffect, FC } from 'react'\nimport { Layout, Menu } from 'antd';\nimport { FileDoneOutlined } from '@ant-design/icons';\nimport Table from './table/index'\nimport Filter from './filters';\nimport axios from '../../axios';\nimport { desc } from './description';\nimport { Switch } from 'antd';\n\nconst { Header, Content, Sider } = Layout;\n// const { SubMenu } = Menu;\n\nexport type durationsType = { [key: string]: { time: string, actionName: string, interaction: string, numRun: string } }\n\nfunction formatFileNames(files: Array<string>) {\n    let output: { [key: string]: any } = {};\n    files.forEach(file => {\n        let arr = file.split('(');\n        if (output.hasOwnProperty(arr[0])) {\n            let date = arr[1].split(')')[0];\n            output[arr[0]].push(date);\n        } else {\n            let date = arr[1].split(')')[0];\n            output[arr[0]] = [date];\n        }\n    })\n    return output;\n}\n\nconst LayoutComponent: FC<{ setTheme(checked: boolean): void , theme:string }> = ({ setTheme , theme }) => {\n    const [data, setData] = useState<{ data: Array<any>, durations: durationsType }>({ data: [], durations: {} });\n    const [module, setModule] = useState<string | null>(null);\n    const [numRun, setNumRun] = useState<string | null>(null);\n    const [filename, setFileName] = useState<string>('');\n    const [fileNames, setFileNames] = useState<{ [key: string]: Array<string> }>({});\n\n    useEffect(() => {\n        axios.get('/fileNames').then(({ data }) => {\n            if (data) {\n                setFileNames(formatFileNames(data));\n                setFileName(data[0]);\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }, []);\n\n    function onChange(checked: boolean) {\n        setTheme(checked);\n    }\n\n    function move(array: Array<string>, oldIndex : number, newIndex:number) : Array<string> {\n        if (newIndex >= array.length) {\n            newIndex = array.length - 1;\n        }\n        array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n        return array;\n    }\n\n    return (\n        <Layout>\n            <Header className=\"header\" style={{ position: 'sticky', zIndex: 1000, top: '0px' }}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\">\n                    <Menu.Item key=\"1\" style={theme==='dark'?{color:'white'}:{}}>Measurement of Interactive Slowness</Menu.Item>\n                    <div className=\"logo\" style={{position:'absolute', right:'100px'}}>Dark Mode  <Switch onChange={onChange} /></div> \n                </Menu>         \n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            style={{ height: '100%' }}\n                        >\n                            {\n                              fileNames && Object.keys(fileNames).length > 0 &&  move(Object.keys(fileNames),1,0).map((file: string) => {\n                                    return (\n                                        <Menu.Item key={`${file}`} onClick={() => {\n                                            setModule(`${file}(${fileNames[file][0]})`);\n                                            setFileName(`${file}(${fileNames[file][0]}).json`);\n                                        }} style={{ textTransform: 'capitalize' }}>{file.replaceAll('-', ' ')}</Menu.Item>\n                                    )\n                                })\n                            }\n                        </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            <Content style={{ padding: '0 24px' }}>\n                                <Filter updateTableData={(data: { data: Array<any>, durations: durationsType }) => { setData(data) }} setModule={(name: string) => setModule(name)} filename={filename} />\n                                <h3>Module Name : {module && module.split('(')[0].replaceAll('-', ' ')}</h3>\n                                {/* <h3>#Run :{numRun} </h3>\n                                <h3>Date: {module && module.split('(')[1].split(')')[0]}</h3> */}\n                                <h4>Description : {module && desc[module.split('(')[0].replaceAll('-', ' ')]}</h4>\n                            </Content>\n                        </Layout>\n                        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n                            {\n                                module &&\n                                <Content style={{ padding: '0 24px', minHeight: 280 }}><Table data={data} setRuns={(num: string) => { setNumRun(num) }} currNumRun={numRun} setFileName={(name: string) => { setFileName(name) }} fileDates={fileNames[module.split('(')[0]]} file={module.split('(')[0]} theme={theme}/></Content>\n                            }\n                        </Layout></Content>\n                </Layout>\n            </Content>\n        </Layout>)\n}\n\n\nexport default LayoutComponent","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Reporter from '../reporter/index'\nimport \"../../app.css\"\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Route exact path=\"/\" render={(props)=><Reporter setTheme={(checked:boolean)=>{}} theme={\"light\"}/>} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}